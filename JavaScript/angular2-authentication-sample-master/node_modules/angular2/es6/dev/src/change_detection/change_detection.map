{"version":3,"sources":["change_detection.js"],"names":[],"mappings":"AAAA;AAAA,KAAO,EAAC,0BAAyB;AAAG,uBAAqB,CAAC,KAAO,0BAAwB,CAAC;AAC1F,KAAO,EAAC,YAAW,CAAC,KAAO,wBAAsB,CAAC;AAClD,KAAO,EAAC,sBAAqB,CAAC,KAAO,2BAAyB,CAAC;AAC/D,KAAO,EAAC,sBAAqB,CAAC,KAAO,2BAAyB,CAAC;AAC/D,KAAO,EAAC,gBAAe,CAAC,KAAO,qBAAmB,CAAC;AACnD,KAAO,EAAC,eAAc,CAAC,KAAO,oBAAkB,CAAC;AACjD,KAAO,EAAC,OAAM,CAAC,KAAO,cAAY,CAAC;AACnC,KAAO,EAAC,eAAc;AAAG,oBAAkB,CAAC,KAAO,eAAa,CAAC;AACjE,KAAO,EAAC,UAAS,CAAC,KAAO,cAAY,CAAC;AAOtC,KAAO,CAAI,GAAA,CAAA,UAAS,EAAI,EACtB,GAAI,uBAAqB,AAAC,EAAC,CAC3B,IAAI,gBAAc,AAAC,EAAC,CACtB,CAAC;AAAA,AAOD,KAAO,CAAI,GAAA,CAAA,YAAW,EAAI,EACxB,GAAI,uBAAqB,AAAC,EAAC,CAC3B,IAAI,gBAAc,AAAC,EAAC,CACtB,CAAC;AAAA,AAOD,KAAO,CAAI,GAAA,CAAA,KAAI,EAAI,EACjB,GAAI,iBAAe,AAAC,EAAC,CACrB,IAAI,gBAAc,AAAC,EAAC,CACtB,CAAC;AAAA,AAED,KAAO,CAAI,GAAA,CAAA,YAAW,EAAI;AACxB,eAAa,CAAI,aAAW;AAC5B,aAAW,CAAI,WAAS;AACxB,QAAM,CAAI,MAAI;AAAA,AAChB,CAAC;AAAA,AAWD,KAAO,MAAM,uBAAqB,QAAU,gBAAc;AAGxD,YAAU,CAAE,QAAO,AAAa,CAAG;AA1DrC,SAAK,cAAc,UA0DI,aAAW,CA1DI,CAAA;AA2DlC,QAAI,AAAC,EAAC,CAAC;AACP,OAAG,SAAS,EAAI,SAAO,CAAC;EAC1B;AAAA,AAEA,0BAAwB,CAAE,IAAG,AAAO,CAAG,CAAA,qBAAoB,EAAW,QAAM;AA/D9E,SAAK,cAAc,MAAnB,CAAA,MAAK,KAAgB,+BAArB,CAAA,MAAK,KAAgB,QAAiB,CAAA;AAAtC,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAgEd,GAAI,2BAAyB,AAAC,CAAC,IAAG,SAAS,CAAG,sBAAoB,CAAC,CAhEnC,CA+DsC,oBAAkB,CA/DpC,CAAA;EAiE7D;AACF;AAAA,AAlEA,KAAK,eAAe,AAAC,uCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cAqDzB,WAAS,AAAC,EAAC,EArDqC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,sCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAyDH,YAAW,GAzDe;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,0EACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,KAAgB,WAArB,MAAK,KAAgB,UAC4B;EAAC,CAAC,CAAC,CAAC;AA2ErD,KAAO,MAAM,mBAAiB,QAAU,gBAAc;AAGpD,YAAU,CAAE,QAAO,AAAa,CAAG;AA/ErC,SAAK,cAAc,UA+EI,aAAW,CA/EI,CAAA;AAgFlC,QAAI,AAAC,EAAC,CAAC;AACP,OAAG,SAAS,EAAI,SAAO,CAAC;EAC1B;AAAA,AAEA,0BAAwB,CAAE,IAAG,AAAO,CAAG,CAAA,qBAAoB,EAAW,QAAM;AApF9E,SAAK,cAAc,MAAnB,CAAA,MAAK,KAAgB,+BAArB,CAAA,MAAK,KAAgB,QAAiB,CAAA;AAAtC,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAqFd,GAAI,uBAAqB,AAAC,CAAC,IAAG,SAAS,CAAG,sBAAoB,CAAC,CArF/B,CAoFsC,oBAAkB,CApFpC,CAAA;EAsF7D;AACF;AAAA,AAvFA,KAAK,eAAe,AAAC,mCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cA0EzB,WAAS,AAAC,EAAC,EA1EqC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,kCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YA8EH,YAAW,GA9Ee;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,sEACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,KAAgB,WAArB,MAAK,KAAgB,UAC4B;EAAC,CAAC,CAAC,CAAC;AAwFrD,KAAO,CAAI,GAAA,CAAA,mBAAkB,EAAI,IAAI,aAAW,AAAC,CAAC,YAAW,CAAC,CAAC;AAAA","file":"angular2/src/change_detection/change_detection.es6","sourcesContent":["import {DynamicProtoChangeDetector, JitProtoChangeDetector} from './proto_change_detector';\nimport {PipeRegistry} from './pipes/pipe_registry';\nimport {IterableChangesFactory} from './pipes/iterable_changes';\nimport {KeyValueChangesFactory} from './pipes/keyvalue_changes';\nimport {AsyncPipeFactory} from './pipes/async_pipe';\nimport {NullPipeFactory} from './pipes/null_pipe';\nimport {DEFAULT} from './constants';\nimport {ChangeDetection, ProtoChangeDetector} from './interfaces';\nimport {Injectable} from 'angular2/di';\n\n/**\n * Structural diffing for `Object`s and `Map`s.\n *\n * @exportedAs angular2/pipes\n */\nexport var keyValDiff = [\n  new KeyValueChangesFactory(),\n  new NullPipeFactory()\n];\n\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n *\n * @exportedAs angular2/pipes\n */\nexport var iterableDiff = [\n  new IterableChangesFactory(),\n  new NullPipeFactory()\n];\n\n/**\n * Async binding to such types as Observable.\n *\n * @exportedAs angular2/pipes\n */\nexport var async = [\n  new AsyncPipeFactory(),\n  new NullPipeFactory()\n];\n\nexport var defaultPipes = {\n  \"iterableDiff\" : iterableDiff,\n  \"keyValDiff\" : keyValDiff,\n  \"async\" : async\n};\n\n\n/**\n * Implements change detection that does not require `eval()`.\n *\n * This is slower than {@link JitChangeDetection}.\n *\n * @exportedAs angular2/change_detection\n */\n@Injectable()\nexport class DynamicChangeDetection extends ChangeDetection {\n  registry:PipeRegistry;\n\n  constructor(registry:PipeRegistry) {\n    super();\n    this.registry = registry;\n  }\n\n  createProtoChangeDetector(name:string, changeControlStrategy:string = DEFAULT):ProtoChangeDetector{\n    return new DynamicProtoChangeDetector(this.registry, changeControlStrategy);\n  }\n}\n\n/**\n * Implements faster change detection, by generating source code.\n *\n * This requires `eval()`. For change detection that does not require `eval()`, see {@link DynamicChangeDetection}.\n *\n * @exportedAs angular2/change_detection\n */\n@Injectable()\nexport class JitChangeDetection extends ChangeDetection {\n  registry:PipeRegistry;\n\n  constructor(registry:PipeRegistry) {\n    super();\n    this.registry = registry;\n  }\n\n  createProtoChangeDetector(name:string, changeControlStrategy:string = DEFAULT):ProtoChangeDetector{\n    return new JitProtoChangeDetector(this.registry, changeControlStrategy);\n  }\n}\n\nexport var defaultPipeRegistry = new PipeRegistry(defaultPipes);\n"]}