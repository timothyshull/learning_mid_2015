{"version":3,"sources":["dynamic_change_detector.js"],"names":[],"mappings":"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","file":"angular2/src/change_detection/dynamic_change_detector.es6","sourcesContent":["import {isPresent, isBlank, BaseException, FunctionWrapper} from 'angular2/src/facade/lang';\nimport {List, ListWrapper, MapWrapper, StringMapWrapper} from 'angular2/src/facade/collection';\n\nimport {AbstractChangeDetector} from './abstract_change_detector';\nimport {BindingRecord} from './binding_record';\nimport {PipeRegistry} from './pipes/pipe_registry';\nimport {ChangeDetectionUtil, uninitialized} from './change_detection_util';\n\n\nimport {\n  ProtoRecord,\n  RECORD_TYPE_SELF,\n  RECORD_TYPE_PROPERTY,\n  RECORD_TYPE_LOCAL,\n  RECORD_TYPE_INVOKE_METHOD,\n  RECORD_TYPE_CONST,\n  RECORD_TYPE_INVOKE_CLOSURE,\n  RECORD_TYPE_PRIMITIVE_OP,\n  RECORD_TYPE_KEYED_ACCESS,\n  RECORD_TYPE_PIPE,\n  RECORD_TYPE_BINDING_PIPE,\n  RECORD_TYPE_INTERPOLATE\n  } from './proto_record';\n\nimport {ExpressionChangedAfterItHasBeenChecked, ChangeDetectionError} from './exceptions';\n\nexport class DynamicChangeDetector extends AbstractChangeDetector {\n  dispatcher:any;\n  pipeRegistry;\n\n  locals:any;\n  values:List;\n  changes:List;\n  pipes:List;\n  prevContexts:List;\n\n  protos:List<ProtoRecord>;\n  directives:any;\n  directiveRecords:List;\n  changeControlStrategy:string;\n\n  constructor(changeControlStrategy:string, dispatcher:any, pipeRegistry:PipeRegistry,\n              protoRecords:List<ProtoRecord>, directiveRecords:List) {\n    super();\n    this.dispatcher = dispatcher;\n    this.pipeRegistry = pipeRegistry;\n\n    this.values = ListWrapper.createFixedSize(protoRecords.length + 1);\n    this.pipes = ListWrapper.createFixedSize(protoRecords.length + 1);\n    this.prevContexts = ListWrapper.createFixedSize(protoRecords.length + 1);\n    this.changes = ListWrapper.createFixedSize(protoRecords.length + 1);\n\n    ListWrapper.fill(this.values, uninitialized);\n    ListWrapper.fill(this.pipes, null);\n    ListWrapper.fill(this.prevContexts, uninitialized);\n    ListWrapper.fill(this.changes, false);\n    this.locals = null;\n    this.directives = null;\n\n    this.protos = protoRecords;\n    this.directiveRecords = directiveRecords;\n    this.changeControlStrategy = changeControlStrategy;\n  }\n\n  hydrate(context:any, locals:any, directives:any) {\n    this.mode = ChangeDetectionUtil.changeDetectionMode(this.changeControlStrategy);\n    this.values[0] = context;\n    this.locals = locals;\n    this.directives = directives;\n  }\n\n  dehydrate() {\n    this._destroyPipes();\n    ListWrapper.fill(this.values, uninitialized);\n    ListWrapper.fill(this.changes, false);\n    ListWrapper.fill(this.pipes, null);\n    ListWrapper.fill(this.prevContexts, uninitialized);\n    this.locals = null;\n  }\n\n  _destroyPipes() {\n    for(var i = 0; i < this.pipes.length; ++i) {\n      if (isPresent(this.pipes[i])) {\n        this.pipes[i].onDestroy();\n      }\n    }\n  }\n\n  hydrated():boolean {\n    return this.values[0] !== uninitialized;\n  }\n\n  detectChangesInRecords(throwOnChange:boolean) {\n    var protos:List<ProtoRecord> = this.protos;\n\n    var changes = null;\n    var isChanged = false;\n    for (var i = 0; i < protos.length; ++i) {\n      var proto:ProtoRecord = protos[i];\n      var bindingRecord = proto.bindingRecord;\n      var directiveRecord = bindingRecord.directiveRecord;\n\n      var change = this._check(proto);\n      if (isPresent(change)) {\n        if (throwOnChange) ChangeDetectionUtil.throwOnChange(proto, change);\n        this._updateDirectiveOrElement(change, bindingRecord);\n        isChanged = true;\n        changes = this._addChange(bindingRecord, change, changes);\n      }\n\n      if (proto.lastInDirective) {\n        if (isPresent(changes)) {\n          this._getDirectiveFor(directiveRecord.directiveIndex).onChange(changes);\n          changes = null;\n        }\n\n        if (isChanged && bindingRecord.isOnPushChangeDetection()) {\n          this._getDetectorFor(directiveRecord.directiveIndex).markAsCheckOnce();\n        }\n\n        isChanged = false;\n      }\n    }\n  }\n\n  callOnAllChangesDone() {\n    var dirs = this.directiveRecords;\n    for (var i = dirs.length - 1; i >= 0; --i) {\n      var dir = dirs[i];\n      if (dir.callOnAllChangesDone) {\n        this._getDirectiveFor(dir.directiveIndex).onAllChangesDone();\n      }\n    }\n  }\n\n  _updateDirectiveOrElement(change, bindingRecord) {\n    if (isBlank(bindingRecord.directiveRecord)) {\n      this.dispatcher.notifyOnBinding(bindingRecord, change.currentValue);\n    } else {\n      var directiveIndex = bindingRecord.directiveRecord.directiveIndex;\n      bindingRecord.setter(this._getDirectiveFor(directiveIndex), change.currentValue);\n    }\n  }\n\n  _addChange(bindingRecord:BindingRecord, change, changes) {\n    if (bindingRecord.callOnChange()) {\n      return ChangeDetectionUtil.addChange(changes, bindingRecord.propertyName, change);\n    } else {\n      return changes;\n    }\n  }\n\n  _getDirectiveFor(directiveIndex) {\n    return this.directives.getDirectiveFor(directiveIndex);\n  }\n\n  _getDetectorFor(directiveIndex) {\n    return this.directives.getDetectorFor(directiveIndex);\n  }\n\n  _check(proto:ProtoRecord) {\n    try {\n      if (proto.mode === RECORD_TYPE_PIPE || proto.mode === RECORD_TYPE_BINDING_PIPE) {\n        return this._pipeCheck(proto);\n      } else {\n        return this._referenceCheck(proto);\n      }\n    } catch (e) {\n      throw new ChangeDetectionError(proto, e);\n    }\n  }\n\n  _referenceCheck(proto:ProtoRecord) {\n    if (this._pureFuncAndArgsDidNotChange(proto)) {\n      this._setChanged(proto, false);\n      return null;\n    }\n\n    var prevValue = this._readSelf(proto);\n    var currValue = this._calculateCurrValue(proto);\n\n    if (!isSame(prevValue, currValue)) {\n      this._writeSelf(proto, currValue);\n      this._setChanged(proto, true);\n\n      if (proto.lastInBinding) {\n        return ChangeDetectionUtil.simpleChange(prevValue, currValue);\n      } else {\n        return null;\n      }\n    } else {\n      this._setChanged(proto, false);\n      return null;\n    }\n  }\n\n  _calculateCurrValue(proto:ProtoRecord) {\n    switch (proto.mode) {\n      case RECORD_TYPE_SELF:\n        return this._readContext(proto);\n\n      case RECORD_TYPE_CONST:\n        return proto.funcOrValue;\n\n      case RECORD_TYPE_PROPERTY:\n        var context = this._readContext(proto);\n        return proto.funcOrValue(context);\n\n      case RECORD_TYPE_LOCAL:\n        return this.locals.get(proto.name);\n\n      case RECORD_TYPE_INVOKE_METHOD:\n        var context = this._readContext(proto);\n        var args = this._readArgs(proto);\n        return proto.funcOrValue(context, args);\n\n      case RECORD_TYPE_KEYED_ACCESS:\n        var arg = this._readArgs(proto)[0];\n        return this._readContext(proto)[arg];\n\n      case RECORD_TYPE_INVOKE_CLOSURE:\n        return FunctionWrapper.apply(this._readContext(proto), this._readArgs(proto));\n\n      case RECORD_TYPE_INTERPOLATE:\n      case RECORD_TYPE_PRIMITIVE_OP:\n        return FunctionWrapper.apply(proto.funcOrValue, this._readArgs(proto));\n\n      default:\n        throw new BaseException(`Unknown operation ${proto.mode}`);\n    }\n  }\n\n  _pipeCheck(proto:ProtoRecord) {\n    var context = this._readContext(proto);\n    var pipe = this._pipeFor(proto, context);\n\n    var newValue = pipe.transform(context);\n\n    if (! ChangeDetectionUtil.noChangeMarker(newValue)) {\n      var prevValue = this._readSelf(proto);\n      this._writeSelf(proto, newValue);\n      this._setChanged(proto, true);\n\n      if (proto.lastInBinding) {\n        return ChangeDetectionUtil.simpleChange(prevValue, newValue);\n      } else {\n        return null;\n      }\n    } else {\n      this._setChanged(proto, false);\n      return null;\n    }\n  }\n\n  _pipeFor(proto:ProtoRecord, context) {\n    var storedPipe = this._readPipe(proto);\n    if (isPresent(storedPipe) && storedPipe.supports(context)) {\n      return storedPipe;\n    }\n    if (isPresent(storedPipe)) {\n      storedPipe.onDestroy();\n    }\n\n    // Currently, only pipes that used in bindings in the template get\n    // the changeDetectorRef of the encompassing component.\n    //\n    // In the future, pipes declared in the bind configuration should\n    // be able to access the changeDetectorRef of that component.\n    var cdr = proto.mode === RECORD_TYPE_BINDING_PIPE ? this.ref : null;\n    var pipe = this.pipeRegistry.get(proto.name, context, cdr);\n    this._writePipe(proto, pipe);\n    return pipe;\n  }\n\n  _readContext(proto:ProtoRecord) {\n    if (proto.contextIndex == -1) {\n      return this._getDirectiveFor(proto.directiveIndex);\n    } else {\n      return this.values[proto.contextIndex];\n    }\n\n    return this.values[proto.contextIndex];\n  }\n\n  _readSelf(proto:ProtoRecord) {\n    return this.values[proto.selfIndex];\n  }\n\n  _writeSelf(proto:ProtoRecord, value) {\n    this.values[proto.selfIndex] = value;\n  }\n\n  _readPipe(proto:ProtoRecord) {\n    return this.pipes[proto.selfIndex];\n  }\n\n  _writePipe(proto:ProtoRecord, value) {\n    this.pipes[proto.selfIndex] = value;\n  }\n\n  _setChanged(proto:ProtoRecord, value:boolean) {\n    this.changes[proto.selfIndex] = value;\n  }\n\n  _pureFuncAndArgsDidNotChange(proto:ProtoRecord):boolean {\n    return proto.isPureFunction() && !this._argsChanged(proto);\n  }\n\n  _argsChanged(proto:ProtoRecord):boolean {\n    var args = proto.args;\n    for(var i = 0; i < args.length; ++i) {\n      if (this.changes[args[i]]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _readArgs(proto:ProtoRecord) {\n    var res = ListWrapper.createFixedSize(proto.args.length);\n    var args = proto.args;\n    for (var i = 0; i < args.length; ++i) {\n      res[i] = this.values[args[i]];\n    }\n    return res;\n  }\n}\n\nfunction isSame(a, b) {\n  if (a === b) return true;\n  if (a instanceof String && b instanceof String && a == b) return true;\n  if ((a !== a) && (b !== b)) return true;\n  return false;\n}\n\n\n\n"]}