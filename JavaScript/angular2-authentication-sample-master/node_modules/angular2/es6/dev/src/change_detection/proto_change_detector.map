{"version":3,"sources":["proto_change_detector.js"],"names":[],"mappings":"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","file":"angular2/src/change_detection/proto_change_detector.es6","sourcesContent":["import {isPresent, isBlank, BaseException, Type, isString} from 'angular2/src/facade/lang';\nimport {List, ListWrapper, MapWrapper, StringMapWrapper} from 'angular2/src/facade/collection';\n\nimport {\n  AccessMember,\n  Assignment,\n  AST,\n  ASTWithSource,\n  AstVisitor,\n  Binary,\n  Chain,\n  Conditional,\n  Pipe,\n  FunctionCall,\n  ImplicitReceiver,\n  Interpolation,\n  KeyedAccess,\n  LiteralArray,\n  LiteralMap,\n  LiteralPrimitive,\n  MethodCall,\n  PrefixNot\n  } from './parser/ast';\n\nimport {ChangeDispatcher, ChangeDetector, ProtoChangeDetector} from './interfaces';\nimport {ChangeDetectionUtil} from './change_detection_util';\nimport {DynamicChangeDetector} from './dynamic_change_detector';\nimport {ChangeDetectorJITGenerator} from './change_detection_jit_generator';\nimport {PipeRegistry} from './pipes/pipe_registry';\nimport {BindingRecord} from './binding_record';\nimport {DirectiveIndex} from './directive_record';\n\nimport {coalesce} from './coalesce';\n\nimport {\n  ProtoRecord,\n  RECORD_TYPE_SELF,\n  RECORD_TYPE_PROPERTY,\n  RECORD_TYPE_LOCAL,\n  RECORD_TYPE_INVOKE_METHOD,\n  RECORD_TYPE_CONST,\n  RECORD_TYPE_INVOKE_CLOSURE,\n  RECORD_TYPE_PRIMITIVE_OP,\n  RECORD_TYPE_KEYED_ACCESS,\n  RECORD_TYPE_PIPE,\n  RECORD_TYPE_BINDING_PIPE,\n  RECORD_TYPE_INTERPOLATE\n  } from './proto_record';\n\nexport class DynamicProtoChangeDetector extends ProtoChangeDetector {\n  _pipeRegistry:PipeRegistry;\n  _records:List<ProtoRecord>;\n  _changeControlStrategy:string;\n\n  constructor(pipeRegistry:PipeRegistry, changeControlStrategy:string) {\n    super();\n    this._pipeRegistry = pipeRegistry;\n    this._changeControlStrategy = changeControlStrategy;\n  }\n\n  instantiate(dispatcher:any, bindingRecords:List, variableBindings:List, directiveRecords:List) {\n    this._createRecordsIfNecessary(bindingRecords, variableBindings);\n    return new DynamicChangeDetector(this._changeControlStrategy, dispatcher,\n      this._pipeRegistry, this._records, directiveRecords);\n  }\n\n  _createRecordsIfNecessary(bindingRecords:List, variableBindings:List) {\n    if (isBlank(this._records)) {\n      var recordBuilder = new ProtoRecordBuilder();\n      ListWrapper.forEach(bindingRecords, (b) => {\n        recordBuilder.addAst(b, variableBindings);\n      });\n      this._records = coalesce(recordBuilder.records);\n    }\n  }\n}\n\nvar _jitProtoChangeDetectorClassCounter:number = 0;\nexport class JitProtoChangeDetector extends ProtoChangeDetector {\n  _factory:Function;\n  _pipeRegistry;\n  _changeControlStrategy:string;\n\n  constructor(pipeRegistry, changeControlStrategy:string) {\n    super();\n    this._pipeRegistry = pipeRegistry;\n    this._factory = null;\n    this._changeControlStrategy = changeControlStrategy;\n  }\n\n  instantiate(dispatcher:any, bindingRecords:List, variableBindings:List, directiveRecords:List) {\n    this._createFactoryIfNecessary(bindingRecords, variableBindings, directiveRecords);\n    return this._factory(dispatcher, this._pipeRegistry);\n  }\n\n  _createFactoryIfNecessary(bindingRecords:List, variableBindings:List, directiveRecords:List) {\n    if (isBlank(this._factory)) {\n      var recordBuilder = new ProtoRecordBuilder();\n      ListWrapper.forEach(bindingRecords, (b) => {\n        recordBuilder.addAst(b, variableBindings);\n      });\n      var c = _jitProtoChangeDetectorClassCounter++;\n      var records = coalesce(recordBuilder.records);\n      var typeName = `ChangeDetector${c}`;\n      this._factory = new ChangeDetectorJITGenerator(typeName, this._changeControlStrategy, records,\n        directiveRecords).generate();\n    }\n  }\n}\n\nclass ProtoRecordBuilder {\n  records:List<ProtoRecord>;\n\n  constructor() {\n    this.records = [];\n  }\n\n  addAst(b:BindingRecord, variableBindings:List = null) {\n    var last = ListWrapper.last(this.records);\n    if (isPresent(last) && last.bindingRecord.directiveRecord == b.directiveRecord) {\n      last.lastInDirective = false;\n    }\n\n    var pr = _ConvertAstIntoProtoRecords.convert(b, this.records.length, variableBindings);\n    if (! ListWrapper.isEmpty(pr)) {\n      var last = ListWrapper.last(pr);\n      last.lastInBinding = true;\n      last.lastInDirective = true;\n\n      this.records = ListWrapper.concat(this.records, pr);\n    }\n  }\n}\n\nclass _ConvertAstIntoProtoRecords {\n  protoRecords:List;\n  bindingRecord:BindingRecord;\n  variableBindings:List;\n  contextIndex:number;\n  expressionAsString:string;\n\n  constructor(bindingRecord:BindingRecord, contextIndex:number, expressionAsString:string, variableBindings:List) {\n    this.protoRecords = [];\n    this.bindingRecord = bindingRecord;\n    this.contextIndex = contextIndex;\n    this.expressionAsString = expressionAsString;\n    this.variableBindings = variableBindings;\n  }\n\n  static convert(b:BindingRecord, contextIndex:number, variableBindings:List) {\n    var c = new _ConvertAstIntoProtoRecords(b, contextIndex, b.ast.toString(), variableBindings);\n    b.ast.visit(c);\n    return c.protoRecords;\n  }\n\n  visitImplicitReceiver(ast:ImplicitReceiver) {\n    return this.bindingRecord.implicitReceiver;\n  }\n\n  visitInterpolation(ast:Interpolation) {\n    var args = this._visitAll(ast.expressions);\n    return this._addRecord(RECORD_TYPE_INTERPOLATE, \"interpolate\", _interpolationFn(ast.strings),\n      args, ast.strings, 0);\n  }\n\n  visitLiteralPrimitive(ast:LiteralPrimitive) {\n    return this._addRecord(RECORD_TYPE_CONST, \"literal\", ast.value, [], null, 0);\n  }\n\n  visitAccessMember(ast:AccessMember) {\n    var receiver = ast.receiver.visit(this);\n    if (isPresent(this.variableBindings) && ListWrapper.contains(this.variableBindings, ast.name)) {\n      return this._addRecord(RECORD_TYPE_LOCAL, ast.name, ast.name, [], null, receiver);\n    } else {\n      return this._addRecord(RECORD_TYPE_PROPERTY, ast.name, ast.getter, [], null, receiver);\n    }\n  }\n\n  visitMethodCall(ast:MethodCall) {;\n    var receiver = ast.receiver.visit(this);\n    var args = this._visitAll(ast.args);\n    if (isPresent(this.variableBindings) && ListWrapper.contains(this.variableBindings, ast.name)) {\n      var target = this._addRecord(RECORD_TYPE_LOCAL, ast.name, ast.name, [], null, receiver);\n      return this._addRecord(RECORD_TYPE_INVOKE_CLOSURE, \"closure\", null, args, null, target);\n    } else {\n      return this._addRecord(RECORD_TYPE_INVOKE_METHOD, ast.name, ast.fn, args, null, receiver);\n    }\n  }\n\n  visitFunctionCall(ast:FunctionCall) {\n    var target = ast.target.visit(this);\n    var args = this._visitAll(ast.args);\n    return this._addRecord(RECORD_TYPE_INVOKE_CLOSURE, \"closure\", null, args, null, target);\n  }\n\n  visitLiteralArray(ast:LiteralArray) {\n    var primitiveName = `arrayFn${ast.expressions.length}`;\n    return this._addRecord(RECORD_TYPE_PRIMITIVE_OP, primitiveName, _arrayFn(ast.expressions.length),\n      this._visitAll(ast.expressions), null, 0);\n  }\n\n  visitLiteralMap(ast:LiteralMap) {\n    return this._addRecord(RECORD_TYPE_PRIMITIVE_OP, _mapPrimitiveName(ast.keys),\n      ChangeDetectionUtil.mapFn(ast.keys), this._visitAll(ast.values), null, 0);\n  }\n\n  visitBinary(ast:Binary) {\n    var left = ast.left.visit(this);\n    var right = ast.right.visit(this);\n    return this._addRecord(RECORD_TYPE_PRIMITIVE_OP, _operationToPrimitiveName(ast.operation),\n      _operationToFunction(ast.operation), [left, right], null, 0);\n  }\n\n  visitPrefixNot(ast:PrefixNot) {\n    var exp = ast.expression.visit(this)\n    return this._addRecord(RECORD_TYPE_PRIMITIVE_OP, \"operation_negate\",\n      ChangeDetectionUtil.operation_negate, [exp], null, 0);\n  }\n\n  visitConditional(ast:Conditional) {\n    var c = ast.condition.visit(this);\n    var t = ast.trueExp.visit(this);\n    var f = ast.falseExp.visit(this);\n    return this._addRecord(RECORD_TYPE_PRIMITIVE_OP, \"cond\",\n      ChangeDetectionUtil.cond, [c,t,f], null, 0);\n  }\n\n  visitPipe(ast:Pipe) {\n    var value = ast.exp.visit(this);\n    var type = ast.inBinding ? RECORD_TYPE_BINDING_PIPE : RECORD_TYPE_PIPE;\n    return this._addRecord(type, ast.name, ast.name, [], null, value);\n  }\n\n  visitKeyedAccess(ast:KeyedAccess) {\n    var obj = ast.obj.visit(this);\n    var key = ast.key.visit(this);\n    return this._addRecord(RECORD_TYPE_KEYED_ACCESS, \"keyedAccess\",\n      ChangeDetectionUtil.keyedAccess, [key], null, obj);\n  }\n\n  _visitAll(asts:List) {\n    var res = ListWrapper.createFixedSize(asts.length);\n    for (var i = 0; i < asts.length; ++i) {\n      res[i] = asts[i].visit(this);\n    }\n    return res;\n  }\n\n  _addRecord(type, name, funcOrValue, args, fixedArgs, context) {\n    var selfIndex = ++ this.contextIndex;\n    if (context instanceof DirectiveIndex) {\n      ListWrapper.push(this.protoRecords,\n        new ProtoRecord(type, name, funcOrValue, args, fixedArgs, -1, context, selfIndex,\n          this.bindingRecord, this.expressionAsString, false, false));\n    } else {\n      ListWrapper.push(this.protoRecords,\n        new ProtoRecord(type, name, funcOrValue, args, fixedArgs, context, null, selfIndex,\n          this.bindingRecord, this.expressionAsString, false, false));\n    }\n    return selfIndex;\n  }\n}\n\n\nfunction _arrayFn(length:number):Function {\n  switch (length) {\n    case 0: return ChangeDetectionUtil.arrayFn0;\n    case 1: return ChangeDetectionUtil.arrayFn1;\n    case 2: return ChangeDetectionUtil.arrayFn2;\n    case 3: return ChangeDetectionUtil.arrayFn3;\n    case 4: return ChangeDetectionUtil.arrayFn4;\n    case 5: return ChangeDetectionUtil.arrayFn5;\n    case 6: return ChangeDetectionUtil.arrayFn6;\n    case 7: return ChangeDetectionUtil.arrayFn7;\n    case 8: return ChangeDetectionUtil.arrayFn8;\n    case 9: return ChangeDetectionUtil.arrayFn9;\n    default: throw new BaseException(`Does not support literal maps with more than 9 elements`);\n  }\n}\n\nfunction _mapPrimitiveName(keys:List) {\n  var stringifiedKeys = ListWrapper.join(\n    ListWrapper.map(keys, (k) => isString(k) ? `\"${k}\"` : `${k}`),\n    \", \");\n  return `mapFn([${stringifiedKeys}])`;\n}\n\nfunction _operationToPrimitiveName(operation:string):string {\n  switch(operation) {\n    case '+'  : return \"operation_add\";\n    case '-'  : return \"operation_subtract\";\n    case '*'  : return \"operation_multiply\";\n    case '/'  : return \"operation_divide\";\n    case '%'  : return \"operation_remainder\";\n    case '==' : return \"operation_equals\";\n    case '!=' : return \"operation_not_equals\";\n    case '<'  : return \"operation_less_then\";\n    case '>'  : return \"operation_greater_then\";\n    case '<=' : return \"operation_less_or_equals_then\";\n    case '>=' : return \"operation_greater_or_equals_then\";\n    case '&&' : return \"operation_logical_and\";\n    case '||' : return \"operation_logical_or\";\n    default: throw new BaseException(`Unsupported operation ${operation}`);\n  }\n}\n\nfunction _operationToFunction(operation:string):Function {\n  switch(operation) {\n    case '+'  : return ChangeDetectionUtil.operation_add;\n    case '-'  : return ChangeDetectionUtil.operation_subtract;\n    case '*'  : return ChangeDetectionUtil.operation_multiply;\n    case '/'  : return ChangeDetectionUtil.operation_divide;\n    case '%'  : return ChangeDetectionUtil.operation_remainder;\n    case '==' : return ChangeDetectionUtil.operation_equals;\n    case '!=' : return ChangeDetectionUtil.operation_not_equals;\n    case '<'  : return ChangeDetectionUtil.operation_less_then;\n    case '>'  : return ChangeDetectionUtil.operation_greater_then;\n    case '<=' : return ChangeDetectionUtil.operation_less_or_equals_then;\n    case '>=' : return ChangeDetectionUtil.operation_greater_or_equals_then;\n    case '&&' : return ChangeDetectionUtil.operation_logical_and;\n    case '||' : return ChangeDetectionUtil.operation_logical_or;\n    default: throw new BaseException(`Unsupported operation ${operation}`);\n  }\n}\n\nfunction s(v) {\n  return isPresent(v) ? `${v}` : '';\n}\n\nfunction _interpolationFn(strings:List) {\n  var length = strings.length;\n  var c0 = length > 0 ? strings[0] : null;\n  var c1 = length > 1 ? strings[1] : null;\n  var c2 = length > 2 ? strings[2] : null;\n  var c3 = length > 3 ? strings[3] : null;\n  var c4 = length > 4 ? strings[4] : null;\n  var c5 = length > 5 ? strings[5] : null;\n  var c6 = length > 6 ? strings[6] : null;\n  var c7 = length > 7 ? strings[7] : null;\n  var c8 = length > 8 ? strings[8] : null;\n  var c9 = length > 9 ? strings[9] : null;\n  switch (length - 1) {\n    case 1: return (a1) => c0 + s(a1) + c1;\n    case 2: return (a1, a2) =>  c0 + s(a1) + c1 + s(a2) + c2;\n    case 3: return (a1, a2, a3) =>  c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3;\n    case 4: return (a1, a2, a3, a4) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4;\n    case 5: return (a1, a2, a3, a4, a5) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5;\n    case 6: return (a1, a2, a3, a4, a5, a6) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5 + s(a6) + c6;\n    case 7: return (a1, a2, a3, a4, a5, a6, a7) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5 + s(a6) + c6 + s(a7) + c7;\n    case 8: return (a1, a2, a3, a4, a5, a6, a7, a8) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5 + s(a6) + c6 + s(a7) + c7 + s(a8) + c8;\n    case 9: return (a1, a2, a3, a4, a5, a6, a7, a8, a9) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5 + s(a6) + c6 + s(a7) + c7 + s(a8) + c8 + s(a9) + c9;\n    default: throw new BaseException(`Does not support more than 9 expressions`);\n  }\n}"]}