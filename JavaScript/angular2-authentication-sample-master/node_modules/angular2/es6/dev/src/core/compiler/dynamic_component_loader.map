{"version":3,"sources":["dynamic_component_loader.js"],"names":[],"mappings":"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","file":"angular2/src/core/compiler/dynamic_component_loader.es6","sourcesContent":["import {Key, Injector, Injectable, ResolvedBinding, Binding, bind} from 'angular2/di'\nimport {Compiler} from './compiler';\nimport {Type, BaseException, stringify, isPresent} from 'angular2/src/facade/lang';\nimport {Promise} from 'angular2/src/facade/async';\nimport {AppViewManager} from 'angular2/src/core/compiler/view_manager';\nimport {ElementRef} from './element_injector';\nimport {AppView} from './view';\n\n/**\n * @exportedAs angular2/view\n */\nexport class ComponentRef {\n  location:ElementRef;\n  instance:any;\n  componentView:AppView;\n  _dispose:Function;\n\n  constructor(location:ElementRef, instance:any, componentView:AppView, dispose:Function){\n    this.location = location;\n    this.instance = instance;\n    this.componentView = componentView;\n    this._dispose = dispose;\n  }\n\n  get injector() {\n    return this.location.injector;\n  }\n\n  get hostView() {\n    return this.location.hostView;\n  }\n\n  dispose() {\n    this._dispose();\n  }\n}\n\n/**\n * Service for dynamically loading a Component into an arbitrary position in the internal Angular\n * application tree.\n *\n * @exportedAs angular2/view\n */\n@Injectable()\nexport class DynamicComponentLoader {\n  _compiler:Compiler;\n  _viewManager:AppViewManager;\n\n  constructor(compiler:Compiler,\n              viewManager: AppViewManager) {\n    this._compiler = compiler;\n    this._viewManager = viewManager;\n  }\n\n  /**\n   * Loads a component into the location given by the provided ElementRef. The loaded component\n   * receives injection as if it in the place of the provided ElementRef.\n   */\n  loadIntoExistingLocation(typeOrBinding, location:ElementRef, injector:Injector = null):Promise<ComponentRef> {\n    var binding = this._getBinding(typeOrBinding);\n    return this._compiler.compile(binding.token).then(componentProtoView => {\n      var componentView = this._viewManager.createDynamicComponentView(\n        location, componentProtoView, binding, injector);\n\n      var dispose = () => {throw new BaseException(\"Not implemented\");};\n      return new ComponentRef(location, location.elementInjector.getDynamicallyLoadedComponent(), componentView, dispose);\n    });\n  }\n\n  /**\n   * Loads a component in the element specified by elementOrSelector. The loaded component receives\n   * injection normally as a hosted view.\n   */\n  loadIntoNewLocation(typeOrBinding, parentComponentLocation:ElementRef, elementOrSelector:any,\n                      injector:Injector = null):Promise<ComponentRef> {\n    return  this._compiler.compileInHost(this._getBinding(typeOrBinding)).then(hostProtoView => {\n      var hostView = this._viewManager.createInPlaceHostView(\n        parentComponentLocation, elementOrSelector, hostProtoView, injector);\n\n      var newLocation = hostView.elementInjectors[0].getElementRef();\n      var component = hostView.elementInjectors[0].getComponent();\n      var dispose = () => {\n        this._viewManager.destroyInPlaceHostView(parentComponentLocation, hostView);\n      };\n      return new ComponentRef(newLocation, component, hostView.componentChildViews[0], dispose);\n    });\n  }\n\n  /**\n   * Loads a component next to the provided ElementRef. The loaded component receives\n   * injection normally as a hosted view.\n   */\n  loadNextToExistingLocation(typeOrBinding, location:ElementRef, injector:Injector = null):Promise<ComponentRef> {\n    var binding = this._getBinding(typeOrBinding);\n    return this._compiler.compileInHost(binding).then(hostProtoView => {\n      var hostView = location.viewContainer.create(-1, hostProtoView, injector);\n\n      var newLocation = hostView.elementInjectors[0].getElementRef();\n      var component = hostView.elementInjectors[0].getComponent();\n      var dispose = () => {\n        var index = location.viewContainer.indexOf(hostView);\n        location.viewContainer.remove(index);\n      };\n      return new ComponentRef(newLocation, component, hostView.componentChildViews[0], dispose);\n    });\n  }\n\n  _getBinding(typeOrBinding) {\n    var binding;\n    if (typeOrBinding instanceof Binding) {\n      binding = typeOrBinding;\n    } else {\n      binding = bind(typeOrBinding).toClass(typeOrBinding);\n    }\n    return binding;\n  }\n\n}\n"]}