{"version":3,"sources":["view_container_ref.js"],"names":[],"mappings":"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","file":"angular2/src/core/compiler/view_container_ref.es6","sourcesContent":["import {ListWrapper, MapWrapper, List} from 'angular2/src/facade/collection';\nimport {Injector} from 'angular2/di';\nimport * as eiModule from 'angular2/src/core/compiler/element_injector';\nimport {isPresent, isBlank} from 'angular2/src/facade/lang';\n\nimport * as viewModule from './view';\nimport * as avmModule from './view_manager';\n\n/**\n * @exportedAs angular2/view\n */\nexport class ViewContainerRef {\n  _viewManager: avmModule.AppViewManager;\n  _location: eiModule.ElementRef;\n  _defaultProtoView: viewModule.AppProtoView;\n\n  constructor(viewManager: avmModule.AppViewManager,\n              location: eiModule.ElementRef,\n              defaultProtoView: viewModule.AppProtoView) {\n    this._viewManager = viewManager;\n    this._location = location;\n    this._defaultProtoView = defaultProtoView;\n  }\n\n  _getViews() {\n    var vc = this._location.hostView.viewContainers[this._location.boundElementIndex];\n    return isPresent(vc) ? vc.views : [];\n  }\n\n  clear():void {\n    for (var i = this.length - 1; i >= 0; i--) {\n      this.remove(i);\n    }\n  }\n\n  get(index: number): viewModule.AppView {\n    return this._getViews()[index];\n  }\n\n  get length() /* :int */ {\n    return this._getViews().length;\n  }\n\n  // TODO(rado): profile and decide whether bounds checks should be added\n  // to the methods below.\n  create(atIndex:number=-1, protoView:viewModule.AppProtoView = null, injector:Injector = null): viewModule.AppView {\n    if (atIndex == -1) atIndex = this.length;\n    if (isBlank(protoView)) {\n      protoView = this._defaultProtoView;\n    }\n    return this._viewManager.createViewInContainer(this._location, atIndex, protoView, injector);\n  }\n\n  insert(view:viewModule.AppView, atIndex:number=-1): viewModule.AppView {\n    if (atIndex == -1) atIndex = this.length;\n    return this._viewManager.attachViewInContainer(this._location, atIndex, view);\n  }\n\n  indexOf(view:viewModule.AppView) {\n    return ListWrapper.indexOf(this._getViews(), view);\n  }\n\n  remove(atIndex:number=-1):void {\n    if (atIndex == -1) atIndex = this.length - 1;\n    this._viewManager.destroyViewInContainer(this._location, atIndex);\n    // view is intentionally not returned to the client.\n  }\n\n  /**\n   * The method can be used together with insert to implement a view move, i.e.\n   * moving the dom nodes while the directives in the view stay intact.\n   */\n  detach(atIndex:number=-1): viewModule.AppView {\n    if (atIndex == -1) atIndex = this.length - 1;\n    return this._viewManager.detachViewInContainer(this._location, atIndex);\n  }\n}\n"]}