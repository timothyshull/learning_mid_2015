{"version":3,"sources":["router.js"],"names":[],"mappings":"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","file":"angular2/src/router/router.es6","sourcesContent":["import {Promise, PromiseWrapper, EventEmitter, ObservableWrapper} from 'angular2/src/facade/async';\nimport {Map, MapWrapper, List, ListWrapper} from 'angular2/src/facade/collection';\nimport {isBlank} from 'angular2/src/facade/lang';\n\nimport {RouteRegistry} from './route_registry';\nimport {Pipeline} from './pipeline';\nimport {Instruction} from './instruction';\nimport {RouterOutlet} from './router_outlet';\n\n/**\n * # Router\n * The router is responsible for mapping URLs to components.\n *\n * You can see the state of the router by inspecting the read-only field `router.navigating`.\n * This may be useful for showing a spinner, for instance.\n *\n * @exportedAs angular2/router\n */\nexport class Router {\n  name;\n  parent:Router;\n  navigating:boolean;\n  lastNavigationAttempt: string;\n  previousUrl:string;\n\n  _pipeline:Pipeline;\n  _registry:RouteRegistry;\n  _outlets:Map<any, RouterOutlet>;\n  _children:Map<any, Router>;\n  _subject:EventEmitter;\n\n  constructor(registry:RouteRegistry, pipeline:Pipeline, parent:Router = null, name = '/') {\n    this.name = name;\n    this.navigating = false;\n    this.parent = parent;\n    this.previousUrl = null;\n    this._outlets = MapWrapper.create();\n    this._children = MapWrapper.create();\n    this._registry = registry;\n    this._pipeline = pipeline;\n    this._subject = new EventEmitter();\n  }\n\n\n  /**\n   * Constructs a child router. You probably don't need to use this unless you're writing a reusable component.\n   */\n  childRouter(outletName = 'default') {\n    if (!MapWrapper.contains(this._children, outletName)) {\n      MapWrapper.set(this._children, outletName, new ChildRouter(this, outletName));\n    }\n    return MapWrapper.get(this._children, outletName);\n  }\n\n\n  /**\n   * Register an object to notify of route changes. You probably don't need to use this unless you're writing a reusable component.\n   */\n  registerOutlet(outlet:RouterOutlet, name = 'default'):Promise {\n    MapWrapper.set(this._outlets, name, outlet);\n    return this.renavigate();\n  }\n\n\n  /**\n   * Update the routing configuration and trigger a navigation.\n   *\n   * # Usage\n   *\n   * ```\n   * router.config('/', SomeCmp);\n   * ```\n   */\n  config(path:string, component, alias:string=null) {\n    this._registry.config(this.name, path, component, alias);\n    return this.renavigate();\n  }\n\n\n  /**\n   * Navigate to a URL. Returns a promise that resolves to the canonical URL for the route.\n   */\n  navigate(url:string):Promise {\n    if (this.navigating) {\n      return PromiseWrapper.resolve(true);\n    }\n\n    this.lastNavigationAttempt = url;\n\n    var instruction = this.recognize(url);\n\n    if (isBlank(instruction)) {\n      return PromiseWrapper.resolve(false);\n    }\n\n    instruction.router = this;\n    this._startNavigating();\n\n    var result = this._pipeline.process(instruction)\n        .then((_) => {\n          ObservableWrapper.callNext(this._subject, instruction.matchedUrl);\n        })\n        .then((_) => this._finishNavigating());\n\n    PromiseWrapper.catchError(result, (_) => this._finishNavigating());\n\n    return result;\n  }\n\n  _startNavigating() {\n    this.navigating = true;\n  }\n\n  _finishNavigating() {\n    this.navigating = false;\n  }\n\n  /**\n   * Subscribe to URL updates from the router\n   */\n  subscribe(onNext) {\n    ObservableWrapper.subscribe(this._subject, onNext);\n  }\n\n\n  activateOutlets(instruction:Instruction):Promise {\n    return this._queryOutlets((outlet, name) => {\n      return outlet.activate(instruction.getChildInstruction(name));\n    })\n    .then((_) => instruction.mapChildrenAsync((instruction, _) => {\n      return instruction.router.activateOutlets(instruction);\n    }));\n  }\n\n  traverseOutlets(fn):Promise {\n    return this._queryOutlets(fn)\n        .then((_) => mapObjAsync(this._children, (child, _) => child.traverseOutlets(fn)));\n  }\n\n  _queryOutlets(fn):Promise {\n    return mapObjAsync(this._outlets, fn);\n  }\n\n\n  /**\n   * Given a URL, returns an instruction representing the component graph\n   */\n  recognize(url:string) {\n    return this._registry.recognize(url);\n  }\n\n\n  /**\n   * Navigates to either the last URL successfully navigated to, or the last URL requested if the router has yet to successfully navigate.\n   */\n  renavigate():Promise {\n    var destination = isBlank(this.previousUrl) ? this.lastNavigationAttempt : this.previousUrl;\n    if (this.navigating || isBlank(destination)) {\n      return PromiseWrapper.resolve(false);\n    }\n    return this.navigate(destination);\n  }\n\n\n  /**\n   * Generate a URL from a component name and optional map of parameters. The URL is relative to the app's base href.\n   */\n  generate(name:string, params:any) {\n    return this._registry.generate(name, params);\n  }\n\n  static getRoot():Router {\n    return new RootRouter(new Pipeline());\n  }\n}\n\nexport class RootRouter extends Router {\n  constructor(pipeline:Pipeline) {\n    super(new RouteRegistry(), pipeline, null, '/');\n  }\n}\n\nclass ChildRouter extends Router {\n  constructor(parent, name) {\n    super(parent._registry, parent._pipeline, parent, name);\n    this.parent = parent;\n  }\n}\n\nfunction mapObjAsync(obj:Map, fn) {\n  return PromiseWrapper.all(mapObj(obj, fn));\n}\n\nfunction mapObj(obj:Map, fn):List {\n  var result = ListWrapper.create();\n  MapWrapper.forEach(obj, (value, key) => ListWrapper.push(result, fn(value, key)));\n  return result;\n}\n"]}