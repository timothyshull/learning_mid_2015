{"version":3,"sources":["route_registry.js"],"names":[],"mappings":"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","file":"angular2/src/router/route_registry.es6","sourcesContent":["import {RouteRecognizer} from './route_recognizer';\nimport {Instruction, noopInstruction} from './instruction';\nimport {List, ListWrapper, Map, MapWrapper, StringMap, StringMapWrapper} from 'angular2/src/facade/collection';\nimport {isPresent, isBlank, isType, StringWrapper} from 'angular2/src/facade/lang';\nimport {RouteConfig} from './route_config';\nimport {reflector} from 'angular2/src/reflection/reflection';\n\nexport class RouteRegistry {\n  _rules:Map<any, RouteRecognizer>;\n\n  constructor() {\n    this._rules = MapWrapper.create();\n  }\n\n  config(parentComponent, path:string, component:any, alias:string = null) {\n    if (parentComponent === 'app') {\n      parentComponent = '/';\n    }\n\n    var recognizer:RouteRecognizer;\n    if (MapWrapper.contains(this._rules, parentComponent)) {\n      recognizer = MapWrapper.get(this._rules, parentComponent);\n    } else {\n      recognizer = new RouteRecognizer();\n      MapWrapper.set(this._rules, parentComponent, recognizer);\n    }\n\n    this._configFromComponent(component);\n\n    //TODO: support sibling components\n    var components = StringMapWrapper.create();\n    StringMapWrapper.set(components, 'default', component);\n\n    var handler = StringMapWrapper.create();\n    StringMapWrapper.set(handler, 'components', components);\n\n    recognizer.addConfig(path, handler, alias);\n  }\n\n  _configFromComponent(component) {\n    if (!isType(component)) {\n      return;\n    }\n\n    // Don't read the annotations from a type more than once â€“\n    // this prevents an infinite loop if a component routes recursively.\n    if (MapWrapper.contains(this._rules, component)) {\n      return;\n    }\n    var annotations = reflector.annotations(component);\n    if (isPresent(annotations)) {\n      for (var i=0; i<annotations.length; i++) {\n        var annotation = annotations[i];\n\n        if (annotation instanceof RouteConfig) {\n          this.config(component, annotation.path, annotation.component);\n        }\n      }\n    }\n  }\n\n\n  // TODO: make recognized context a class\n  // TODO: change parentComponent into parentContext\n  recognize(url:string, parentComponent = '/') {\n    var componentRecognizer = MapWrapper.get(this._rules, parentComponent);\n    if (isBlank(componentRecognizer)) {\n      return null;\n    }\n\n    var solutions = componentRecognizer.recognize(url);\n\n    for(var i = 0; i < solutions.length; i++) {\n      var candidate = solutions[i];\n      if (candidate['unmatchedUrl'].length == 0) {\n        return handlerToLeafInstructions(candidate, parentComponent);\n      }\n\n      var children = StringMapWrapper.create(),\n          allMapped = true;\n\n      StringMapWrapper.forEach(candidate['handler']['components'], (component, name) => {\n        if (!allMapped) {\n          return;\n        }\n        var childInstruction = this.recognize(candidate['unmatchedUrl'], component);\n        if (isPresent(childInstruction)) {\n          childInstruction.params = candidate['params'];\n          children[name] = childInstruction;\n        } else {\n          allMapped = false;\n        }\n      });\n\n      if (allMapped) {\n        return new Instruction({\n          component: parentComponent,\n          children: children,\n          matchedUrl: candidate['matchedUrl']\n        });\n      }\n    }\n\n    return null;\n  }\n\n  generate(name:string, params:any) {\n    //TODO: implement for hierarchical routes\n    var componentRecognizer = MapWrapper.get(this._rules, '/');\n    if (isPresent(componentRecognizer)) {\n      return componentRecognizer.generate(name, params);\n    }\n  }\n}\n\nfunction handlerToLeafInstructions(context, parentComponent) {\n  var children = StringMapWrapper.create();\n  StringMapWrapper.forEach(context['handler']['components'], (component, outletName) => {\n    children[outletName] = new Instruction({\n      component: component,\n      params: context['params']\n    });\n  });\n  return new Instruction({\n    component: parentComponent,\n    children: children,\n    matchedUrl: context['matchedUrl']\n  });\n}\n"]}