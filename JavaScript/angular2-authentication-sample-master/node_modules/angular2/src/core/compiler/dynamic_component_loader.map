{"version":3,"sources":["dynamic_component_loader.js"],"names":[],"mappings":"AAAA;AAAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;cAArC,EAAC,GAAE,YAAqB;AAAE,yBAAwB;IAAE,AAA9B,CAAC;wBAAvB,EAAC,GAAE,YAAqB;AAAE,mCAAwB;IAAE,AAA9B,CAAC;AAAvB,WAAS,CAAT,EAAC,KAAI,CAAO,KAAG,AAAS,CAAC;CAAgC,CAAC;;;;;;;;SAA1D,EAAC,qBAAoB,CAAA,OAAM,AAAC,eAAkB,CACtC,CAAA,sBAAqB,+BAA2B,CAAA,sBAAqB,GAAK,EAAC,OAAM,qBAAmB,CAAC,AAD/D,CACgE;AADtG,MAAE;AAAG,WAAO;AAAG,aAAS;AAAG,kBAAc;AAAG,UAAM;AAAG,OAAG;EACxD,SAAO,EADf,EAAC,eAAoB,CAAA,OAAM,AAAC,cAAkB,CACtC,CAAA,gBAAqB,yBAA2B,CAAA,gBAAqB,GAAK,EAAC,OAAM,eAAmB,CAAC,AAD/D,CACgE;SAD9G,EAAC,wCAAoB,CAAA,OAAM,AAAC,4BAAkB,CACtC,CAAA,yCAAqB,kDAA2B,CAAA,yCAAqB,GAAK,EAAC,OAAM,wCAAmB,CAAC,AAD/D,CACgE;AACtG,OAAG;AAAG,gBAAY;AAAG,YAAQ;AAAG,YAAQ;EACxC,QAAM,EAHd,EAAC,yCAAoB,CAAA,OAAM,AAAC,6BAAkB,CACtC,CAAA,0CAAqB,mDAA2B,CAAA,0CAAqB,GAAK,EAAC,OAAM,yCAAmB,CAAC,AAD/D,CACgE;EAGtG,eAAa,EAJrB,EAAC,6DAAoB,CAAA,OAAM,AAAC,2CAAkB,CACtC,CAAA,8DAAqB,uEAA2B,CAAA,8DAAqB,GAAK,EAAC,OAAM,6DAAmB,CAAC,AAD/D,CACgE;EAItG,WAAS,EALjB,EAAC,0BAAoB,CAAA,OAAM,AAAC,sBAAkB,CACtC,CAAA,2BAAqB,oCAA2B,CAAA,2BAAqB,GAAK,EAAC,OAAM,0BAAmB,CAAC,AAD/D,CACgE;EAKtG,QAAM,EANd,EAAC,WAAoB,CAAA,OAAM,AAAC,UAAkB,CACtC,CAAA,YAAqB,qBAA2B,CAAA,YAAqB,GAAK,EAAC,OAAM,WAAmB,CAAC,AAD/D,CACgE;AAD9G,AAAI,EAAA,eAWG,SAAM,aAAW,CAMV,QAAO,AAAW,CAAG,CAAA,QAAO,AAAI,CAAG,CAAA,aAAY,AAAQ,CAAG,CAAA,OAAM,AAAS,CAAE;AACrF,KAAG,SAAS,EAAI,SAAO,CAAC;AACxB,KAAG,SAAS,EAAI,SAAO,CAAC;AACxB,KAAG,cAAc,EAAI,cAAY,CAAC;AAClC,KAAG,SAAS,EAAI,QAAM,CAAC;AACzB,AAtBsC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC;AAwB3B,IAAI,SAAO,EAAI;AACb,SAAO,CAAA,IAAG,SAAS,SAAS,CAAC;EAC/B;AAEA,IAAI,SAAO,EAAI;AACb,SAAO,CAAA,IAAG,SAAS,SAAS,CAAC;EAC/B;AAEA,QAAM,CAAN,UAAQ,AAAD,CAAG;AACR,OAAG,SAAS,AAAC,EAAC,CAAC;EACjB;AAAA,KAlCmF;AAArF,KAAK,eAAe,AAAC,4BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAgBH,UAAS,IAjBhC,eAAc,KAAO,QAiB0C,OAAM,IAAW,QAAO,GAhBtC;EAAC,CAAC,CAAC,CAAC;AADrD,AAAI,EAAA,yBA4CG,SAAM,uBAAqB,CAIpB,QAAO,AAAS,CAChB,CAAA,WAAU,AAAgB,CAAG;AACvC,KAAG,UAAU,EAAI,SAAO,CAAC;AACzB,KAAG,aAAa,EAAI,YAAU,CAAC;AACjC,AApDsC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC;AA0D3B,yBAAuB,CAAvB,UAAyB,aAAY,CAAG,CAAA,QAAO,AAAqC;MAAvB,SAAO,6CAAa,KAAG;;AAClF,AAAI,MAAA,CAAA,OAAM,EAAI,CAAA,IAAG,YAAY,AAAC,CAAC,aAAY,CAAC,CAAC;AAC7C,SAAO,CAAA,IAAG,UAAU,QAAQ,AAAC,CAAC,OAAM,MAAM,CAAC,KAAK,AAAC,EAAC,SAAA,kBAAiB;AACjE,AAAI,QAAA,CAAA,aAAY,EAAI,CAAA,iBAAgB,2BAA2B,AAAC,CAC9D,QAAO,CAAG,mBAAiB,CAAG,QAAM,CAAG,SAAO,CAAC,CAAC;AAElD,AAAI,QAAA,CAAA,OAAM,IAAI,SAAC,AAAD,CAAM;AAAC,YAAM,IAAI,cAAY,AAAC,CAAC,iBAAgB,CAAC,CAAC;MAAC,CAAA,CAAC;AACjE,WAAO,IAAI,aAAW,AAAC,CAAC,QAAO,CAAG,CAAA,QAAO,gBAAgB,8BAA8B,AAAC,EAAC,CAAG,cAAY,CAAG,QAAM,CAAC,CAAC;IACrH,EAAC,CAAC;EACJ;AAMA,oBAAkB,CAAlB,UAAoB,aAAY,CAAG,CAAA,uBAAsB,AAAW,CAAG,CAAA,iBAAgB,AAC5C;MAAvB,SAAO,6CAAa,KAAG;;AACzC,SAAQ,CAAA,IAAG,UAAU,cAAc,AAAC,CAAC,IAAG,YAAY,AAAC,CAAC,aAAY,CAAC,CAAC,KAAK,AAAC,EAAC,SAAA,aAAY;AACrF,AAAI,QAAA,CAAA,QAAO,EAAI,CAAA,iBAAgB,sBAAsB,AAAC,CACpD,uBAAsB,CAAG,kBAAgB,CAAG,cAAY,CAAG,SAAO,CAAC,CAAC;AAEtE,AAAI,QAAA,CAAA,WAAU,EAAI,CAAA,QAAO,iBAAiB,CAAE,CAAA,CAAC,cAAc,AAAC,EAAC,CAAC;AAC9D,AAAI,QAAA,CAAA,SAAQ,EAAI,CAAA,QAAO,iBAAiB,CAAE,CAAA,CAAC,aAAa,AAAC,EAAC,CAAC;AAC3D,AAAI,QAAA,CAAA,OAAM,IAAI,SAAC,AAAD,CAAM;AAClB,wBAAgB,uBAAuB,AAAC,CAAC,uBAAsB,CAAG,SAAO,CAAC,CAAC;MAC7E,CAAA,CAAC;AACD,WAAO,IAAI,aAAW,AAAC,CAAC,WAAU,CAAG,UAAQ,CAAG,CAAA,QAAO,oBAAoB,CAAE,CAAA,CAAC,CAAG,QAAM,CAAC,CAAC;IAC3F,EAAC,CAAC;EACJ;AAMA,2BAAyB,CAAzB,UAA2B,aAAY,CAAG,CAAA,QAAO,AAAqC;MAAvB,SAAO,6CAAa,KAAG;AACpF,AAAI,MAAA,CAAA,OAAM,EAAI,CAAA,IAAG,YAAY,AAAC,CAAC,aAAY,CAAC,CAAC;AAC7C,SAAO,CAAA,IAAG,UAAU,cAAc,AAAC,CAAC,OAAM,CAAC,KAAK,AAAC,EAAC,SAAA,aAAY;AAC5D,AAAI,QAAA,CAAA,QAAO,EAAI,CAAA,QAAO,cAAc,OAAO,AAAC,CAAC,CAAC,CAAA,CAAG,cAAY,CAAG,SAAO,CAAC,CAAC;AAEzE,AAAI,QAAA,CAAA,WAAU,EAAI,CAAA,QAAO,iBAAiB,CAAE,CAAA,CAAC,cAAc,AAAC,EAAC,CAAC;AAC9D,AAAI,QAAA,CAAA,SAAQ,EAAI,CAAA,QAAO,iBAAiB,CAAE,CAAA,CAAC,aAAa,AAAC,EAAC,CAAC;AAC3D,AAAI,QAAA,CAAA,OAAM,IAAI,SAAC,AAAD,CAAM;AAClB,AAAI,UAAA,CAAA,KAAI,EAAI,CAAA,QAAO,cAAc,QAAQ,AAAC,CAAC,QAAO,CAAC,CAAC;AACpD,eAAO,cAAc,OAAO,AAAC,CAAC,KAAI,CAAC,CAAC;MACtC,CAAA,CAAC;AACD,WAAO,IAAI,aAAW,AAAC,CAAC,WAAU,CAAG,UAAQ,CAAG,CAAA,QAAO,oBAAoB,CAAE,CAAA,CAAC,CAAG,QAAM,CAAC,CAAC;IAC3F,EAAC,CAAC;EACJ;AAEA,YAAU,CAAV,UAAY,aAAY,CAAG;AACzB,AAAI,MAAA,CAAA,OAAM,CAAC;AACX,OAAI,aAAY,WAAa,QAAM,CAAG;AACpC,YAAM,EAAI,cAAY,CAAC;IACzB,KAAO;AACL,YAAM,EAAI,CAAA,IAAG,AAAC,CAAC,aAAY,CAAC,QAAQ,AAAC,CAAC,aAAY,CAAC,CAAC;IACtD;AAAA,AACA,SAAO,QAAM,CAAC;EAChB;AAAA,KAnHmF;AAArF,KAAK,eAAe,AAAC,uCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cA0CzB,WAAS,AAAC,EAAC,EA1CqC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,sCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YA+CH,QAAO,IACH,cAAa,GAhDS;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,yEACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,gBAyDyB,UAAS,IAAY,QAAO,GAzD9B;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,oEACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,gBAwEmC,UAAS,IAzEtE,eAAc,KAAO,QA0EU,QAAO,GAzEW;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,2EACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,gBA2F2B,UAAS,IAAY,QAAO,GA3FhC;EAAC,CAAC,CAAC,CAAC;AAqHrD","file":"angular2/src/core/compiler/dynamic_component_loader.js","sourcesContent":["import {Key, Injector, Injectable, ResolvedBinding, Binding, bind} from 'angular2/di'\nimport {Compiler} from './compiler';\nimport {Type, BaseException, stringify, isPresent} from 'angular2/src/facade/lang';\nimport {Promise} from 'angular2/src/facade/async';\nimport {AppViewManager} from 'angular2/src/core/compiler/view_manager';\nimport {ElementRef} from './element_injector';\nimport {AppView} from './view';\n\n/**\n * @exportedAs angular2/view\n */\nexport class ComponentRef {\n  location:ElementRef;\n  instance:any;\n  componentView:AppView;\n  _dispose:Function;\n\n  constructor(location:ElementRef, instance:any, componentView:AppView, dispose:Function){\n    this.location = location;\n    this.instance = instance;\n    this.componentView = componentView;\n    this._dispose = dispose;\n  }\n\n  get injector() {\n    return this.location.injector;\n  }\n\n  get hostView() {\n    return this.location.hostView;\n  }\n\n  dispose() {\n    this._dispose();\n  }\n}\n\n/**\n * Service for dynamically loading a Component into an arbitrary position in the internal Angular\n * application tree.\n *\n * @exportedAs angular2/view\n */\n@Injectable()\nexport class DynamicComponentLoader {\n  _compiler:Compiler;\n  _viewManager:AppViewManager;\n\n  constructor(compiler:Compiler,\n              viewManager: AppViewManager) {\n    this._compiler = compiler;\n    this._viewManager = viewManager;\n  }\n\n  /**\n   * Loads a component into the location given by the provided ElementRef. The loaded component\n   * receives injection as if it in the place of the provided ElementRef.\n   */\n  loadIntoExistingLocation(typeOrBinding, location:ElementRef, injector:Injector = null):Promise<ComponentRef> {\n    var binding = this._getBinding(typeOrBinding);\n    return this._compiler.compile(binding.token).then(componentProtoView => {\n      var componentView = this._viewManager.createDynamicComponentView(\n        location, componentProtoView, binding, injector);\n\n      var dispose = () => {throw new BaseException(\"Not implemented\");};\n      return new ComponentRef(location, location.elementInjector.getDynamicallyLoadedComponent(), componentView, dispose);\n    });\n  }\n\n  /**\n   * Loads a component in the element specified by elementOrSelector. The loaded component receives\n   * injection normally as a hosted view.\n   */\n  loadIntoNewLocation(typeOrBinding, parentComponentLocation:ElementRef, elementOrSelector:any,\n                      injector:Injector = null):Promise<ComponentRef> {\n    return  this._compiler.compileInHost(this._getBinding(typeOrBinding)).then(hostProtoView => {\n      var hostView = this._viewManager.createInPlaceHostView(\n        parentComponentLocation, elementOrSelector, hostProtoView, injector);\n\n      var newLocation = hostView.elementInjectors[0].getElementRef();\n      var component = hostView.elementInjectors[0].getComponent();\n      var dispose = () => {\n        this._viewManager.destroyInPlaceHostView(parentComponentLocation, hostView);\n      };\n      return new ComponentRef(newLocation, component, hostView.componentChildViews[0], dispose);\n    });\n  }\n\n  /**\n   * Loads a component next to the provided ElementRef. The loaded component receives\n   * injection normally as a hosted view.\n   */\n  loadNextToExistingLocation(typeOrBinding, location:ElementRef, injector:Injector = null):Promise<ComponentRef> {\n    var binding = this._getBinding(typeOrBinding);\n    return this._compiler.compileInHost(binding).then(hostProtoView => {\n      var hostView = location.viewContainer.create(-1, hostProtoView, injector);\n\n      var newLocation = hostView.elementInjectors[0].getElementRef();\n      var component = hostView.elementInjectors[0].getComponent();\n      var dispose = () => {\n        var index = location.viewContainer.indexOf(hostView);\n        location.viewContainer.remove(index);\n      };\n      return new ComponentRef(newLocation, component, hostView.componentChildViews[0], dispose);\n    });\n  }\n\n  _getBinding(typeOrBinding) {\n    var binding;\n    if (typeOrBinding instanceof Binding) {\n      binding = typeOrBinding;\n    } else {\n      binding = bind(typeOrBinding).toClass(typeOrBinding);\n    }\n    return binding;\n  }\n\n}\n"]}