{"version":3,"sources":["router.js"],"names":[],"mappings":"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","file":"angular2/src/router/router.js","sourcesContent":["import {Promise, PromiseWrapper, EventEmitter, ObservableWrapper} from 'angular2/src/facade/async';\nimport {Map, MapWrapper, List, ListWrapper} from 'angular2/src/facade/collection';\nimport {isBlank} from 'angular2/src/facade/lang';\n\nimport {RouteRegistry} from './route_registry';\nimport {Pipeline} from './pipeline';\nimport {Instruction} from './instruction';\nimport {RouterOutlet} from './router_outlet';\n\n/**\n * # Router\n * The router is responsible for mapping URLs to components.\n *\n * You can see the state of the router by inspecting the read-only field `router.navigating`.\n * This may be useful for showing a spinner, for instance.\n *\n * @exportedAs angular2/router\n */\nexport class Router {\n  name;\n  parent:Router;\n  navigating:boolean;\n  lastNavigationAttempt: string;\n  previousUrl:string;\n\n  _pipeline:Pipeline;\n  _registry:RouteRegistry;\n  _outlets:Map<any, RouterOutlet>;\n  _children:Map<any, Router>;\n  _subject:EventEmitter;\n\n  constructor(registry:RouteRegistry, pipeline:Pipeline, parent:Router = null, name = '/') {\n    this.name = name;\n    this.navigating = false;\n    this.parent = parent;\n    this.previousUrl = null;\n    this._outlets = MapWrapper.create();\n    this._children = MapWrapper.create();\n    this._registry = registry;\n    this._pipeline = pipeline;\n    this._subject = new EventEmitter();\n  }\n\n\n  /**\n   * Constructs a child router. You probably don't need to use this unless you're writing a reusable component.\n   */\n  childRouter(outletName = 'default') {\n    if (!MapWrapper.contains(this._children, outletName)) {\n      MapWrapper.set(this._children, outletName, new ChildRouter(this, outletName));\n    }\n    return MapWrapper.get(this._children, outletName);\n  }\n\n\n  /**\n   * Register an object to notify of route changes. You probably don't need to use this unless you're writing a reusable component.\n   */\n  registerOutlet(outlet:RouterOutlet, name = 'default'):Promise {\n    MapWrapper.set(this._outlets, name, outlet);\n    return this.renavigate();\n  }\n\n\n  /**\n   * Update the routing configuration and trigger a navigation.\n   *\n   * # Usage\n   *\n   * ```\n   * router.config('/', SomeCmp);\n   * ```\n   */\n  config(path:string, component, alias:string=null) {\n    this._registry.config(this.name, path, component, alias);\n    return this.renavigate();\n  }\n\n\n  /**\n   * Navigate to a URL. Returns a promise that resolves to the canonical URL for the route.\n   */\n  navigate(url:string):Promise {\n    if (this.navigating) {\n      return PromiseWrapper.resolve(true);\n    }\n\n    this.lastNavigationAttempt = url;\n\n    var instruction = this.recognize(url);\n\n    if (isBlank(instruction)) {\n      return PromiseWrapper.resolve(false);\n    }\n\n    instruction.router = this;\n    this._startNavigating();\n\n    var result = this._pipeline.process(instruction)\n        .then((_) => {\n          ObservableWrapper.callNext(this._subject, instruction.matchedUrl);\n        })\n        .then((_) => this._finishNavigating());\n\n    PromiseWrapper.catchError(result, (_) => this._finishNavigating());\n\n    return result;\n  }\n\n  _startNavigating() {\n    this.navigating = true;\n  }\n\n  _finishNavigating() {\n    this.navigating = false;\n  }\n\n  /**\n   * Subscribe to URL updates from the router\n   */\n  subscribe(onNext) {\n    ObservableWrapper.subscribe(this._subject, onNext);\n  }\n\n\n  activateOutlets(instruction:Instruction):Promise {\n    return this._queryOutlets((outlet, name) => {\n      return outlet.activate(instruction.getChildInstruction(name));\n    })\n    .then((_) => instruction.mapChildrenAsync((instruction, _) => {\n      return instruction.router.activateOutlets(instruction);\n    }));\n  }\n\n  traverseOutlets(fn):Promise {\n    return this._queryOutlets(fn)\n        .then((_) => mapObjAsync(this._children, (child, _) => child.traverseOutlets(fn)));\n  }\n\n  _queryOutlets(fn):Promise {\n    return mapObjAsync(this._outlets, fn);\n  }\n\n\n  /**\n   * Given a URL, returns an instruction representing the component graph\n   */\n  recognize(url:string) {\n    return this._registry.recognize(url);\n  }\n\n\n  /**\n   * Navigates to either the last URL successfully navigated to, or the last URL requested if the router has yet to successfully navigate.\n   */\n  renavigate():Promise {\n    var destination = isBlank(this.previousUrl) ? this.lastNavigationAttempt : this.previousUrl;\n    if (this.navigating || isBlank(destination)) {\n      return PromiseWrapper.resolve(false);\n    }\n    return this.navigate(destination);\n  }\n\n\n  /**\n   * Generate a URL from a component name and optional map of parameters. The URL is relative to the app's base href.\n   */\n  generate(name:string, params:any) {\n    return this._registry.generate(name, params);\n  }\n\n  static getRoot():Router {\n    return new RootRouter(new Pipeline());\n  }\n}\n\nexport class RootRouter extends Router {\n  constructor(pipeline:Pipeline) {\n    super(new RouteRegistry(), pipeline, null, '/');\n  }\n}\n\nclass ChildRouter extends Router {\n  constructor(parent, name) {\n    super(parent._registry, parent._pipeline, parent, name);\n    this.parent = parent;\n  }\n}\n\nfunction mapObjAsync(obj:Map, fn) {\n  return PromiseWrapper.all(mapObj(obj, fn));\n}\n\nfunction mapObj(obj:Map, fn):List {\n  var result = ListWrapper.create();\n  MapWrapper.forEach(obj, (value, key) => ListWrapper.push(result, fn(value, key)));\n  return result;\n}\n"]}