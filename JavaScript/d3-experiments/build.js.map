{"version":3,"sources":["webpack:///build.js","webpack:///webpack/bootstrap 656f4641aa2d5dce7773","webpack:///./scripts/main.js","webpack:///./scripts/lib/d3.js","webpack:///./scripts/lib/hexbin.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","update","source","nodes","tree","root","height","Math","max","length","barHeight","margin","top","bottom","d3","select","transition","duration","attr","self","frameElement","style","forEach","n","i","x","node","svg","selectAll","data","d","nodeEnter","enter","append","y0","x0","barWidth","color","on","click","text","name","y","exit","remove","link","links","target","insert","o","diagonal","children","_children","sampleSVG","this","datasetText","parsedCSV","csv","parseRows","right","left","width","randomX","random","normal","randomY","points","range","map","scale","linear","domain","interpolate","interpolateLab","hexbin","size","radius","identity","xAxis","axis","orient","tickSize","yAxis","hexagon","layout","nodeSize","projection","json","error","flare","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","d3_numeric","isNaN","d3_bisector","compare","lo","hi","arguments","mid","d3_zipLength","d3_range_integerScale","k","d3_class","ctor","properties","key","Object","defineProperty","prototype","value","enumerable","d3_Map","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","method","apply","d3_vendorSymbol","object","charAt","toUpperCase","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","listenerByName","listener","get","indexOf","concat","set","d3_eventPreventDefault","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","createElementNS","createElement","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","i0","j0","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","w","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","position","padding","border","ctm","getScreenCTM","f","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","toString","min","format","hsl","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","toLowerCase","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer_step","now","d3_timer_mark","delay","d3_timer_sweep","isFinite","clearTimeout","d3_timer_timeout","d3_timer_interval","d3_timer_frame","Date","d3_timer_active","d3_timer_queueHead","t","t0","t1","time","Infinity","d3_timer_queueTail","d3_format_precision","ceil","log","LN10","d3_formatPrefix","abs","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","z0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","d3_geom_quadtreeVisit","sx","sy","d3_geom_quadtreeFind","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","transform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","pointCharge","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","active","count","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","ease","timer","elapsed","tweened","tick","d3_svg_axisX","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","tsv","then","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","oc","kc","lc","rc1","t30","t12","rc0","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","responseXML","undefined","binsById","pj","py1","px1","pi2","pj2","px2","py2","d3_hexbinAngles","d3_hexbinX","d3_hexbinY","centers","odd","mesh","fragment"],"mappings":"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","file":"build.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*global require*/\n\t/*jslint node: true*/\n\t\"use strict\";\n\tvar d3 = __webpack_require__(1);\n\tvar test = __webpack_require__(2);\n\t\n\tvar sampleSVG = d3.select(\"#viz\")\n\t    .append(\"svg\")\n\t    .attr(\"width\", 100)\n\t    .attr(\"height\", 100);\n\t\n\tsampleSVG.append(\"circle\")\n\t    .style(\"stroke\", \"gray\")\n\t    .style(\"fill\", \"white\")\n\t    .attr(\"r\", 40)\n\t    .attr(\"cx\", 50)\n\t    .attr(\"cy\", 50)\n\t    .on(\"mouseover\", function () {\n\t        d3.select(this).style(\"fill\", \"aliceblue\");\n\t    })\n\t    .on(\"mouseout\", function () {\n\t        d3.select(this).style(\"fill\", \"white\");\n\t    });\n\t\n\td3.text(\"data.csv\", function (datasetText) {\n\t\n\t    var parsedCSV = d3.csv.parseRows(datasetText),\n\t\n\t        sampleHTML = d3.select(\"#viz-data\")\n\t            .append(\"table\")\n\t            .style(\"border-collapse\", \"collapse\")\n\t            .style(\"border\", \"2px black solid\")\n\t\n\t            .selectAll(\"tr\")\n\t            .data(parsedCSV)\n\t            .enter().append(\"tr\")\n\t\n\t            .selectAll(\"td\")\n\t            .data(function (d) {\n\t                return d;\n\t            })\n\t            .enter().append(\"td\")\n\t            .style(\"border\", \"1px black solid\")\n\t            .style(\"padding\", \"5px\")\n\t            .on(\"mouseover\", function () {\n\t                d3.select(this).style(\"background-color\", \"aliceblue\");\n\t            })\n\t            .on(\"mouseout\", function () {\n\t                d3.select(this).style(\"background-color\", \"white\");\n\t            })\n\t            .text(function (d) {\n\t                return d;\n\t            })\n\t            .style(\"font-size\", \"12px\");\n\t});\n\t\n\tvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n\t    width = 960 - margin.left - margin.right,\n\t    height = 500 - margin.top - margin.bottom;\n\t\n\tvar randomX = d3.random.normal(width / 2, 80),\n\t    randomY = d3.random.normal(height / 2, 80),\n\t    points = d3.range(2000).map(function () {\n\t        return [randomX(), randomY()];\n\t    });\n\t\n\tvar color = d3.scale.linear()\n\t    .domain([0, 20])\n\t    .range([\"white\", \"steelblue\"])\n\t    .interpolate(d3.interpolateLab);\n\t\n\tvar hexbin = d3.hexbin()\n\t    .size([width, height])\n\t    .radius(20);\n\t\n\tvar x = d3.scale.identity()\n\t    .domain([0, width]);\n\t\n\tvar y = d3.scale.linear()\n\t    .domain([0, height])\n\t    .range([height, 0]);\n\t\n\tvar xAxis = d3.svg.axis()\n\t    .scale(x)\n\t    .orient(\"bottom\")\n\t    .tickSize(6, -height);\n\t\n\tvar yAxis = d3.svg.axis()\n\t    .scale(y)\n\t    .orient(\"left\")\n\t    .tickSize(6, -width);\n\t\n\tvar svg = d3.select(\"body\").append(\"svg\")\n\t    .attr(\"width\", width + margin.left + margin.right)\n\t    .attr(\"height\", height + margin.top + margin.bottom)\n\t    .append(\"g\")\n\t    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t\n\tsvg.append(\"clipPath\")\n\t    .attr(\"id\", \"clip\")\n\t    .append(\"rect\")\n\t    .attr(\"class\", \"mesh\")\n\t    .attr(\"width\", width)\n\t    .attr(\"height\", height);\n\t\n\tsvg.append(\"g\")\n\t    .attr(\"clip-path\", \"url(#clip)\")\n\t    .selectAll(\".hexagon\")\n\t    .data(hexbin(points))\n\t    .enter().append(\"path\")\n\t    .attr(\"class\", \"hexagon\")\n\t    .attr(\"d\", hexbin.hexagon())\n\t    .attr(\"transform\", function (d) {\n\t        return \"translate(\" + d.x + \",\" + d.y + \")\";\n\t    })\n\t    .style(\"fill\", function (d) {\n\t        return color(d.length);\n\t    });\n\t\n\tsvg.append(\"g\")\n\t    .attr(\"class\", \"y axis\")\n\t    .call(yAxis);\n\t\n\tsvg.append(\"g\")\n\t    .attr(\"class\", \"x axis\")\n\t    .attr(\"transform\", \"translate(0,\" + height + \")\")\n\t    .call(xAxis);\n\t\n\t\n\tvar margin = {top: 30, right: 20, bottom: 30, left: 20},\n\t    width = 960 - margin.left - margin.right,\n\t    barHeight = 20,\n\t    barWidth = width * 0.8;\n\t\n\tvar i = 0,\n\t    duration = 400,\n\t    root;\n\t\n\tvar tree = d3.layout.tree()\n\t    .nodeSize([0, 20]);\n\t\n\tvar diagonal = d3.svg.diagonal()\n\t    .projection(function (d) {\n\t        return [d.y, d.x];\n\t    });\n\t\n\tvar svg = d3.select(\"body\").append(\"svg\")\n\t    .attr(\"width\", width + margin.left + margin.right)\n\t    .append(\"g\")\n\t    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t\n\td3.json(\"../test.json\", function (error, flare) {\n\t    flare.x0 = 0;\n\t    flare.y0 = 0;\n\t    update(root = flare);\n\t});\n\t\n\tfunction update(source) {\n\t\n\t    // Compute the flattened node list. TODO use d3.layout.hierarchy.\n\t    var nodes = tree.nodes(root);\n\t\n\t    var height = Math.max(500, nodes.length * barHeight + margin.top + margin.bottom);\n\t\n\t    d3.select(\"svg\").transition()\n\t        .duration(duration)\n\t        .attr(\"height\", height);\n\t\n\t    d3.select(self.frameElement).transition()\n\t        .duration(duration)\n\t        .style(\"height\", height + \"px\");\n\t\n\t    // Compute the \"layout\".\n\t    nodes.forEach(function (n, i) {\n\t        n.x = i * barHeight;\n\t    });\n\t\n\t    // Update the nodes…\n\t    var node = svg.selectAll(\"g.node\")\n\t        .data(nodes, function (d) {\n\t            return d.id || (d.id = ++i);\n\t        });\n\t\n\t    var nodeEnter = node.enter().append(\"g\")\n\t        .attr(\"class\", \"node\")\n\t        .attr(\"transform\", function (d) {\n\t            return \"translate(\" + source.y0 + \",\" + source.x0 + \")\";\n\t        })\n\t        .style(\"opacity\", 1e-6);\n\t\n\t    // Enter any new nodes at the parent's previous position.\n\t    nodeEnter.append(\"rect\")\n\t        .attr(\"y\", -barHeight / 2)\n\t        .attr(\"height\", barHeight)\n\t        .attr(\"width\", barWidth)\n\t        .style(\"fill\", color)\n\t        .on(\"click\", click);\n\t\n\t    nodeEnter.append(\"text\")\n\t        .attr(\"dy\", 3.5)\n\t        .attr(\"dx\", 5.5)\n\t        .text(function (d) {\n\t            return d.name;\n\t        });\n\t\n\t    // Transition nodes to their new position.\n\t    nodeEnter.transition()\n\t        .duration(duration)\n\t        .attr(\"transform\", function (d) {\n\t            return \"translate(\" + d.y + \",\" + d.x + \")\";\n\t        })\n\t        .style(\"opacity\", 1);\n\t\n\t    node.transition()\n\t        .duration(duration)\n\t        .attr(\"transform\", function (d) {\n\t            return \"translate(\" + d.y + \",\" + d.x + \")\";\n\t        })\n\t        .style(\"opacity\", 1)\n\t        .select(\"rect\")\n\t        .style(\"fill\", color);\n\t\n\t    // Transition exiting nodes to the parent's new position.\n\t    node.exit().transition()\n\t        .duration(duration)\n\t        .attr(\"transform\", function (d) {\n\t            return \"translate(\" + source.y + \",\" + source.x + \")\";\n\t        })\n\t        .style(\"opacity\", 1e-6)\n\t        .remove();\n\t\n\t    // Update the links…\n\t    var link = svg.selectAll(\"path.link\")\n\t        .data(tree.links(nodes), function (d) {\n\t            return d.target.id;\n\t        });\n\t\n\t    // Enter any new links at the parent's previous position.\n\t    link.enter().insert(\"path\", \"g\")\n\t        .attr(\"class\", \"link\")\n\t        .attr(\"d\", function (d) {\n\t            var o = {x: source.x0, y: source.y0};\n\t            return diagonal({source: o, target: o});\n\t        })\n\t        .transition()\n\t        .duration(duration)\n\t        .attr(\"d\", diagonal);\n\t\n\t    // Transition links to their new position.\n\t    link.transition()\n\t        .duration(duration)\n\t        .attr(\"d\", diagonal);\n\t\n\t    // Transition exiting nodes to the parent's new position.\n\t    link.exit().transition()\n\t        .duration(duration)\n\t        .attr(\"d\", function (d) {\n\t            var o = {x: source.x, y: source.y};\n\t            return diagonal({source: o, target: o});\n\t        })\n\t        .remove();\n\t\n\t    // Stash the old positions for transition.\n\t    nodes.forEach(function (d) {\n\t        d.x0 = d.x;\n\t        d.y0 = d.y;\n\t    });\n\t}\n\t\n\t// Toggle children on click.\n\tfunction click(d) {\n\t    if (d.children) {\n\t        d._children = d.children;\n\t        d.children = null;\n\t    } else {\n\t        d.children = d._children;\n\t        d._children = null;\n\t    }\n\t    update(d);\n\t}\n\t\n\tfunction color(d) {\n\t    return d._children ? \"#3182bd\" : d.children ? \"#c6dbef\" : \"#fd8d3c\";\n\t}\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.5\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0) {\n\t        prefix = name.slice(0, i);\n\t        name = name.slice(i + 1);\n\t      }\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n\t            exitNodes[i] = node;\n\t          } else {\n\t            nodeByKeyValue.set(keyValue, node);\n\t          }\n\t          keyValues[i] = keyValue;\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = nodes;\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged && d3.event.target === target);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n\t    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n\t    function interpolate(t) {\n\t      var s = t * S;\n\t      if (dr) {\n\t        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      }\n\t      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n\t    }\n\t    interpolate.duration = S * 1e3;\n\t    return interpolate;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: +_\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      });\n\t      center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged && d3.event.target === target);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else translate0 = location(center0 = center || d3.mouse(this)), \n\t      d3_selection_interrupt.call(this), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format.toLowerCase())) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      f: false,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  };\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now();\n\t    d3_timer_active = d3_timer_queueHead;\n\t    while (d3_timer_active) {\n\t      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n\t      d3_timer_active = d3_timer_active.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.f) {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      } else {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n\t    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n\t      s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: 1,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: 3,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    } else {\n\t      s.push(\"\");\n\t    }\n\t    if (ra != rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(s.pop() + \"rotate(\" + rb + \")\");\n\t    }\n\t    if (wa != wb) {\n\t      q.push({\n\t        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(s.pop() + \"skewX(\" + wb + \")\");\n\t    }\n\t    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n\t      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: n - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: n - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] != 1 || kb[1] != 1) {\n\t      s.push(s.pop() + \"scale(\" + kb + \")\");\n\t    }\n\t    n = q.length;\n\t    return function(t) {\n\t      var i = -1, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: (x - x0) / k\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight / (t.weight + s.weight));\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) alpha = x; else alpha = 0;\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        d3.timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = 0;\n\t      root.y = 0;\n\t      root.dx = size[0];\n\t      root.dy = size[1];\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n\t      Math.floor), e;\n\t      return function(d) {\n\t        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t        if (x1 != null) {\n\t          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.join(\"L\");\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return d3_svg_lineLinear(points) + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, active;\n\t      if ((lock = this[ns]) && (active = lock[lock.active])) {\n\t        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id];\n\t    if (!transition) {\n\t      var time = inherit.time;\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t      d3.timer(function(elapsed) {\n\t        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n\t        timer.t = delay + time;\n\t        if (delay <= elapsed) return start(elapsed - delay);\n\t        timer.c = start;\n\t        function start(elapsed) {\n\t          if (lock.active > id) return stop();\n\t          var active = lock[lock.active];\n\t          if (active) {\n\t            --lock.count;\n\t            delete lock[lock.active];\n\t            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t          }\n\t          lock.active = id;\n\t          transition.event && transition.event.start.call(node, node.__data__, i);\n\t          transition.tween.forEach(function(key, value) {\n\t            if (value = value.call(node, node.__data__, i)) {\n\t              tweened.push(value);\n\t            }\n\t          });\n\t          ease = transition.ease;\n\t          duration = transition.duration;\n\t          d3.timer(function() {\n\t            timer.c = tick(elapsed || 1) ? d3_true : tick;\n\t            return 1;\n\t          }, 0, time);\n\t        }\n\t        function tick(elapsed) {\n\t          if (lock.active !== id) return 1;\n\t          var t = elapsed / duration, e = ease(t), n = tweened.length;\n\t          while (n > 0) {\n\t            tweened[--n].call(node, e);\n\t          }\n\t          if (t >= 1) {\n\t            transition.event && transition.event.end.call(node, node.__data__, i);\n\t            return stop();\n\t          }\n\t        }\n\t        function stop() {\n\t          if (--lock.count) delete lock[id]; else delete node[ns];\n\t          return 1;\n\t        }\n\t      }, 0, time);\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = arguments;\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n\t  this.d3 = d3;\n\t}();\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function() {\n\t\n\td3.hexbin = function() {\n\t  var width = 1,\n\t      height = 1,\n\t      r,\n\t      x = d3_hexbinX,\n\t      y = d3_hexbinY,\n\t      dx,\n\t      dy;\n\t\n\t  function hexbin(points) {\n\t    var binsById = {};\n\t\n\t    points.forEach(function(point, i) {\n\t      var py = y.call(hexbin, point, i) / dy, pj = Math.round(py),\n\t          px = x.call(hexbin, point, i) / dx - (pj & 1 ? .5 : 0), pi = Math.round(px),\n\t          py1 = py - pj;\n\t\n\t      if (Math.abs(py1) * 3 > 1) {\n\t        var px1 = px - pi,\n\t            pi2 = pi + (px < pi ? -1 : 1) / 2,\n\t            pj2 = pj + (py < pj ? -1 : 1),\n\t            px2 = px - pi2,\n\t            py2 = py - pj2;\n\t        if (px1 * px1 + py1 * py1 > px2 * px2 + py2 * py2) pi = pi2 + (pj & 1 ? 1 : -1) / 2, pj = pj2;\n\t      }\n\t\n\t      var id = pi + \"-\" + pj, bin = binsById[id];\n\t      if (bin) bin.push(point); else {\n\t        bin = binsById[id] = [point];\n\t        bin.i = pi;\n\t        bin.j = pj;\n\t        bin.x = (pi + (pj & 1 ? 1 / 2 : 0)) * dx;\n\t        bin.y = pj * dy;\n\t      }\n\t    });\n\t\n\t    return d3.values(binsById);\n\t  }\n\t\n\t  function hexagon(radius) {\n\t    var x0 = 0, y0 = 0;\n\t    return d3_hexbinAngles.map(function(angle) {\n\t      var x1 = Math.sin(angle) * radius,\n\t          y1 = -Math.cos(angle) * radius,\n\t          dx = x1 - x0,\n\t          dy = y1 - y0;\n\t      x0 = x1, y0 = y1;\n\t      return [dx, dy];\n\t    });\n\t  }\n\t\n\t  hexbin.x = function(_) {\n\t    if (!arguments.length) return x;\n\t    x = _;\n\t    return hexbin;\n\t  };\n\t\n\t  hexbin.y = function(_) {\n\t    if (!arguments.length) return y;\n\t    y = _;\n\t    return hexbin;\n\t  };\n\t\n\t  hexbin.hexagon = function(radius) {\n\t    if (arguments.length < 1) radius = r;\n\t    return \"m\" + hexagon(radius).join(\"l\") + \"z\";\n\t  };\n\t\n\t  hexbin.centers = function() {\n\t    var centers = [];\n\t    for (var y = 0, odd = false, j = 0; y < height + r; y += dy, odd = !odd, ++j) {\n\t      for (var x = odd ? dx / 2 : 0, i = 0; x < width + dx / 2; x += dx, ++i) {\n\t        var center = [x, y];\n\t        center.i = i;\n\t        center.j = j;\n\t        centers.push(center);\n\t      }\n\t    }\n\t    return centers;\n\t  };\n\t\n\t  hexbin.mesh = function() {\n\t    var fragment = hexagon(r).slice(0, 4).join(\"l\");\n\t    return hexbin.centers().map(function(p) { return \"M\" + p + \"m\" + fragment; }).join(\"\");\n\t  };\n\t\n\t  hexbin.size = function(_) {\n\t    if (!arguments.length) return [width, height];\n\t    width = +_[0], height = +_[1];\n\t    return hexbin;\n\t  };\n\t\n\t  hexbin.radius = function(_) {\n\t    if (!arguments.length) return r;\n\t    r = +_;\n\t    dx = r * 2 * Math.sin(Math.PI / 3);\n\t    dy = r * 1.5;\n\t    return hexbin;\n\t  };\n\t\n\t  return hexbin.radius(1);\n\t};\n\t\n\tvar d3_hexbinAngles = d3.range(0, 2 * Math.PI, Math.PI / 3),\n\t    d3_hexbinX = function(d) { return d[0]; },\n\t    d3_hexbinY = function(d) { return d[1]; };\n\t\n\t})();\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** build.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 656f4641aa2d5dce7773\n **/","/*global require*/\n/*jslint node: true*/\n\"use strict\";\nvar d3 = require(\"./lib/d3.js\");\nvar test = require(\"./lib/hexbin.js\");\n\nvar sampleSVG = d3.select(\"#viz\")\n    .append(\"svg\")\n    .attr(\"width\", 100)\n    .attr(\"height\", 100);\n\nsampleSVG.append(\"circle\")\n    .style(\"stroke\", \"gray\")\n    .style(\"fill\", \"white\")\n    .attr(\"r\", 40)\n    .attr(\"cx\", 50)\n    .attr(\"cy\", 50)\n    .on(\"mouseover\", function () {\n        d3.select(this).style(\"fill\", \"aliceblue\");\n    })\n    .on(\"mouseout\", function () {\n        d3.select(this).style(\"fill\", \"white\");\n    });\n\nd3.text(\"data.csv\", function (datasetText) {\n\n    var parsedCSV = d3.csv.parseRows(datasetText),\n\n        sampleHTML = d3.select(\"#viz-data\")\n            .append(\"table\")\n            .style(\"border-collapse\", \"collapse\")\n            .style(\"border\", \"2px black solid\")\n\n            .selectAll(\"tr\")\n            .data(parsedCSV)\n            .enter().append(\"tr\")\n\n            .selectAll(\"td\")\n            .data(function (d) {\n                return d;\n            })\n            .enter().append(\"td\")\n            .style(\"border\", \"1px black solid\")\n            .style(\"padding\", \"5px\")\n            .on(\"mouseover\", function () {\n                d3.select(this).style(\"background-color\", \"aliceblue\");\n            })\n            .on(\"mouseout\", function () {\n                d3.select(this).style(\"background-color\", \"white\");\n            })\n            .text(function (d) {\n                return d;\n            })\n            .style(\"font-size\", \"12px\");\n});\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar randomX = d3.random.normal(width / 2, 80),\n    randomY = d3.random.normal(height / 2, 80),\n    points = d3.range(2000).map(function () {\n        return [randomX(), randomY()];\n    });\n\nvar color = d3.scale.linear()\n    .domain([0, 20])\n    .range([\"white\", \"steelblue\"])\n    .interpolate(d3.interpolateLab);\n\nvar hexbin = d3.hexbin()\n    .size([width, height])\n    .radius(20);\n\nvar x = d3.scale.identity()\n    .domain([0, width]);\n\nvar y = d3.scale.linear()\n    .domain([0, height])\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .tickSize(6, -height);\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .tickSize(6, -width);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n    .append(\"rect\")\n    .attr(\"class\", \"mesh\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.append(\"g\")\n    .attr(\"clip-path\", \"url(#clip)\")\n    .selectAll(\".hexagon\")\n    .data(hexbin(points))\n    .enter().append(\"path\")\n    .attr(\"class\", \"hexagon\")\n    .attr(\"d\", hexbin.hexagon())\n    .attr(\"transform\", function (d) {\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\n    })\n    .style(\"fill\", function (d) {\n        return color(d.length);\n    });\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\n\nvar margin = {top: 30, right: 20, bottom: 30, left: 20},\n    width = 960 - margin.left - margin.right,\n    barHeight = 20,\n    barWidth = width * 0.8;\n\nvar i = 0,\n    duration = 400,\n    root;\n\nvar tree = d3.layout.tree()\n    .nodeSize([0, 20]);\n\nvar diagonal = d3.svg.diagonal()\n    .projection(function (d) {\n        return [d.y, d.x];\n    });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"../test.json\", function (error, flare) {\n    flare.x0 = 0;\n    flare.y0 = 0;\n    update(root = flare);\n});\n\nfunction update(source) {\n\n    // Compute the flattened node list. TODO use d3.layout.hierarchy.\n    var nodes = tree.nodes(root);\n\n    var height = Math.max(500, nodes.length * barHeight + margin.top + margin.bottom);\n\n    d3.select(\"svg\").transition()\n        .duration(duration)\n        .attr(\"height\", height);\n\n    d3.select(self.frameElement).transition()\n        .duration(duration)\n        .style(\"height\", height + \"px\");\n\n    // Compute the \"layout\".\n    nodes.forEach(function (n, i) {\n        n.x = i * barHeight;\n    });\n\n    // Update the nodes…\n    var node = svg.selectAll(\"g.node\")\n        .data(nodes, function (d) {\n            return d.id || (d.id = ++i);\n        });\n\n    var nodeEnter = node.enter().append(\"g\")\n        .attr(\"class\", \"node\")\n        .attr(\"transform\", function (d) {\n            return \"translate(\" + source.y0 + \",\" + source.x0 + \")\";\n        })\n        .style(\"opacity\", 1e-6);\n\n    // Enter any new nodes at the parent's previous position.\n    nodeEnter.append(\"rect\")\n        .attr(\"y\", -barHeight / 2)\n        .attr(\"height\", barHeight)\n        .attr(\"width\", barWidth)\n        .style(\"fill\", color)\n        .on(\"click\", click);\n\n    nodeEnter.append(\"text\")\n        .attr(\"dy\", 3.5)\n        .attr(\"dx\", 5.5)\n        .text(function (d) {\n            return d.name;\n        });\n\n    // Transition nodes to their new position.\n    nodeEnter.transition()\n        .duration(duration)\n        .attr(\"transform\", function (d) {\n            return \"translate(\" + d.y + \",\" + d.x + \")\";\n        })\n        .style(\"opacity\", 1);\n\n    node.transition()\n        .duration(duration)\n        .attr(\"transform\", function (d) {\n            return \"translate(\" + d.y + \",\" + d.x + \")\";\n        })\n        .style(\"opacity\", 1)\n        .select(\"rect\")\n        .style(\"fill\", color);\n\n    // Transition exiting nodes to the parent's new position.\n    node.exit().transition()\n        .duration(duration)\n        .attr(\"transform\", function (d) {\n            return \"translate(\" + source.y + \",\" + source.x + \")\";\n        })\n        .style(\"opacity\", 1e-6)\n        .remove();\n\n    // Update the links…\n    var link = svg.selectAll(\"path.link\")\n        .data(tree.links(nodes), function (d) {\n            return d.target.id;\n        });\n\n    // Enter any new links at the parent's previous position.\n    link.enter().insert(\"path\", \"g\")\n        .attr(\"class\", \"link\")\n        .attr(\"d\", function (d) {\n            var o = {x: source.x0, y: source.y0};\n            return diagonal({source: o, target: o});\n        })\n        .transition()\n        .duration(duration)\n        .attr(\"d\", diagonal);\n\n    // Transition links to their new position.\n    link.transition()\n        .duration(duration)\n        .attr(\"d\", diagonal);\n\n    // Transition exiting nodes to the parent's new position.\n    link.exit().transition()\n        .duration(duration)\n        .attr(\"d\", function (d) {\n            var o = {x: source.x, y: source.y};\n            return diagonal({source: o, target: o});\n        })\n        .remove();\n\n    // Stash the old positions for transition.\n    nodes.forEach(function (d) {\n        d.x0 = d.x;\n        d.y0 = d.y;\n    });\n}\n\n// Toggle children on click.\nfunction click(d) {\n    if (d.children) {\n        d._children = d.children;\n        d.children = null;\n    } else {\n        d.children = d._children;\n        d._children = null;\n    }\n    update(d);\n}\n\nfunction color(d) {\n    return d._children ? \"#3182bd\" : d.children ? \"#c6dbef\" : \"#fd8d3c\";\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/main.js\n ** module id = 0\n ** module chunks = 0\n **/","!function() {\n  var d3 = {\n    version: \"3.5.5\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = nodes;\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      });\n      center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else translate0 = location(center0 = center || d3.mouse(this)), \n      d3_selection_interrupt.call(this), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format.toLowerCase())) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n        if (x1 != null) {\n          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, active;\n      if ((lock = this[ns]) && (active = lock[lock.active])) {\n        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          var active = lock[lock.active];\n          if (active) {\n            --lock.count;\n            delete lock[lock.active];\n            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n          }\n          lock.active = id;\n          transition.event && transition.event.start.call(node, node.__data__, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, node.__data__, i)) {\n              tweened.push(value);\n            }\n          });\n          ease = transition.ease;\n          duration = transition.duration;\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return 1;\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, node.__data__, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node[ns];\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/lib/d3.js\n ** module id = 1\n ** module chunks = 0\n **/","(function() {\n\nd3.hexbin = function() {\n  var width = 1,\n      height = 1,\n      r,\n      x = d3_hexbinX,\n      y = d3_hexbinY,\n      dx,\n      dy;\n\n  function hexbin(points) {\n    var binsById = {};\n\n    points.forEach(function(point, i) {\n      var py = y.call(hexbin, point, i) / dy, pj = Math.round(py),\n          px = x.call(hexbin, point, i) / dx - (pj & 1 ? .5 : 0), pi = Math.round(px),\n          py1 = py - pj;\n\n      if (Math.abs(py1) * 3 > 1) {\n        var px1 = px - pi,\n            pi2 = pi + (px < pi ? -1 : 1) / 2,\n            pj2 = pj + (py < pj ? -1 : 1),\n            px2 = px - pi2,\n            py2 = py - pj2;\n        if (px1 * px1 + py1 * py1 > px2 * px2 + py2 * py2) pi = pi2 + (pj & 1 ? 1 : -1) / 2, pj = pj2;\n      }\n\n      var id = pi + \"-\" + pj, bin = binsById[id];\n      if (bin) bin.push(point); else {\n        bin = binsById[id] = [point];\n        bin.i = pi;\n        bin.j = pj;\n        bin.x = (pi + (pj & 1 ? 1 / 2 : 0)) * dx;\n        bin.y = pj * dy;\n      }\n    });\n\n    return d3.values(binsById);\n  }\n\n  function hexagon(radius) {\n    var x0 = 0, y0 = 0;\n    return d3_hexbinAngles.map(function(angle) {\n      var x1 = Math.sin(angle) * radius,\n          y1 = -Math.cos(angle) * radius,\n          dx = x1 - x0,\n          dy = y1 - y0;\n      x0 = x1, y0 = y1;\n      return [dx, dy];\n    });\n  }\n\n  hexbin.x = function(_) {\n    if (!arguments.length) return x;\n    x = _;\n    return hexbin;\n  };\n\n  hexbin.y = function(_) {\n    if (!arguments.length) return y;\n    y = _;\n    return hexbin;\n  };\n\n  hexbin.hexagon = function(radius) {\n    if (arguments.length < 1) radius = r;\n    return \"m\" + hexagon(radius).join(\"l\") + \"z\";\n  };\n\n  hexbin.centers = function() {\n    var centers = [];\n    for (var y = 0, odd = false, j = 0; y < height + r; y += dy, odd = !odd, ++j) {\n      for (var x = odd ? dx / 2 : 0, i = 0; x < width + dx / 2; x += dx, ++i) {\n        var center = [x, y];\n        center.i = i;\n        center.j = j;\n        centers.push(center);\n      }\n    }\n    return centers;\n  };\n\n  hexbin.mesh = function() {\n    var fragment = hexagon(r).slice(0, 4).join(\"l\");\n    return hexbin.centers().map(function(p) { return \"M\" + p + \"m\" + fragment; }).join(\"\");\n  };\n\n  hexbin.size = function(_) {\n    if (!arguments.length) return [width, height];\n    width = +_[0], height = +_[1];\n    return hexbin;\n  };\n\n  hexbin.radius = function(_) {\n    if (!arguments.length) return r;\n    r = +_;\n    dx = r * 2 * Math.sin(Math.PI / 3);\n    dy = r * 1.5;\n    return hexbin;\n  };\n\n  return hexbin.radius(1);\n};\n\nvar d3_hexbinAngles = d3.range(0, 2 * Math.PI, Math.PI / 3),\n    d3_hexbinX = function(d) { return d[0]; },\n    d3_hexbinY = function(d) { return d[1]; };\n\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/lib/hexbin.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}